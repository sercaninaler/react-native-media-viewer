{"version":3,"sources":["/Users/sercan/Github/react-native-web-kids-learn/src/App.js","/Users/sercan/Github/react-native-web-kids-learn/App.js","/Users/sercan/Github/react-native-web-kids-learn/web-build/register-service-worker.js","webpack:////Users/sercan/Github/react-native-web-kids-learn/src/index.css?09d3","/Users/sercan/Github/react-native-web-kids-learn/src/index.css","webpack:////Users/sercan/Github/react-native-web-kids-learn/src/App.css?318e","/Users/sercan/Github/react-native-web-kids-learn/src/App.css"],"names":["App","useState","trees","setTrees","className","length","map","tree","index","key","name","data-testid","species_name","showImage","src","image","alt","type","onClick","id","newTrees","toggleTree","a","async","axios","get","response","data","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","content","module","i","options","transform","undefined","locals","exports","push"],"mappings":"iLA2DeA,G,YApDH,WAAO,IAAD,EACYC,mBAAS,IADrB,WACRC,EADQ,KACDC,EADC,KAqBhB,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,yBACZF,GAA0B,IAAjBA,EAAMG,OAAe,yBAAKD,UAAU,kBAC3CF,EAAMI,KAAI,SAACC,EAAMC,GAAP,OACT,yBAAKJ,UAAU,gBAAgBK,IAAKF,EAAKG,KAAMC,cAAY,OACzD,wBAAIP,UAAU,uBAAuBG,EAAKG,MAC1C,yBAAKN,UAAU,0BAA0BG,EAAKK,cAE7CL,EAAKM,WAAa,yBAAKC,IAAKP,EAAKQ,MAAOC,IAAKT,EAAKG,KAAMN,UAAU,wBAEnE,4BACEM,KAAMF,EACNS,KAAK,SACLb,UAAU,uBACVc,QAAS,kBArBJ,SAAAC,GACjB,IAAMC,EAAQ,IAAOlB,GACrBkB,EAASD,GAAIN,WAAaO,EAASD,GAAIN,UACvCV,EAASiB,GAkBkBC,CAAWb,KAEzBD,EAAKM,UAAY,OAAS,OAN7B,eAUG,6BACP,4BAAQK,QAxCC,4BAAAI,EAAAC,OAAA,kEAAAD,EAAA,MACQE,IAAMC,IANT,+EAKL,OACTC,EADS,OAETxB,EAAQwB,EAASC,KAAKzB,MAC5BC,EAASD,GAHM,sCAwCkBE,UAAU,wBAArC,2BC/CKJ,O,2DCDX,kBAAmB4B,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAASC,OAGdC,OAAM,SAASC,GACdC,QAAQH,KAAK,oCAAqCE,U,mBCT1D,IAAIE,EAAU,EAAQ,IAEA,kBAAZA,IAAsBA,EAAU,CAAC,CAACC,EAAOC,EAAIF,EAAS,MAOhE,IAAIG,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBC,GAER,EAAQ,GAAR,CAA0GL,EAASG,GAE7HH,EAAQM,SAAQL,EAAOM,QAAUP,EAAQM,S,oBCjBlCL,EAAOM,QAAU,EAAQ,GAAR,EAA0G,IAE7HC,KAAK,CAACP,EAAOC,EAAI,maAAsb,M,mBCD/c,IAAIF,EAAU,EAAQ,IAEA,kBAAZA,IAAsBA,EAAU,CAAC,CAACC,EAAOC,EAAIF,EAAS,MAOhE,IAAIG,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBC,GAER,EAAQ,GAAR,CAA0GL,EAASG,GAE7HH,EAAQM,SAAQL,EAAOM,QAAUP,EAAQM,S,oBCjBlCL,EAAOM,QAAU,EAAQ,GAAR,EAA0G,IAE7HC,KAAK,CAACP,EAAOC,EAAI,s3BAAu3B,O","file":"static/js/app.ebcb8f1e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport './App.css';\n\nexport const treesURL = 'https://s3.eu-central-1.amazonaws.com/ecosia-frontend-developer/trees.json';\n\nconst App = () => {\n  const [ trees, setTrees ] = useState([]);\n\n  const getTrees = async () => {\n    const response = await axios.get(treesURL)\n    const trees = response.data.trees\n    setTrees(trees);\n  }\n\n  /*\n  useEffect(() => {\n    getTrees();\n  }, []);\n  */\n\n  const toggleTree = id => {\n    const newTrees = [...trees];\n    newTrees[id].showImage = !newTrees[id].showImage;\n    setTrees(newTrees);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-tree-items-holder\">\n        {trees && trees.length !== 0 ? <div className=\"App-tree-items\">\n          {trees.map((tree, index) => (\n            <div className=\"App-tree-item\" key={tree.name} data-testid=\"row\">\n              <h1 className=\"App-tree-item-title\">{tree.name}</h1>\n              <div className=\"App-tree-item-subtitle\">{tree.species_name}</div>\n\n              {tree.showImage && <img src={tree.image} alt={tree.name} className=\"App-tree-item-image\" />}\n\n              <button\n                name={index}\n                type=\"submit\"\n                className=\"App-tree-item-button\"\n                onClick={() => toggleTree(index)}\n              >\n                {tree.showImage ? 'Hide' : 'Show' } Image\n              </button>\n            </div>\n          ))}\n        </div> : <div>\n          <button onClick={getTrees} className=\"App-tree-item-button\">\n            Load some pictures\n          </button>\n        </div>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React  from 'react'\nimport App from './src/App'\n\nexport default App","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\nvar content = require(\"!!../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/cjs.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../usr/local/lib/node_modules/expo-cli/node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/cjs.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/cjs.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"* {\\n  box-sizing: border-box;\\n}\\n\\nbody {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\",\\n    \\\"Ubuntu\\\", \\\"Cantarell\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\",\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \\\"Courier New\\\",\\n    monospace;\\n}\\n\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/cjs.js!./App.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../usr/local/lib/node_modules/expo-cli/node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/cjs.js!./App.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/cjs.js!./App.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".App {\\n  text-align: center;\\n  padding: 20px;\\n}\\n\\n.App-logo {\\n  height: 160px;\\n}\\n\\n.App-tree-items-holder {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.App-tree-items {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  max-width: 1000px;\\n}\\n\\n.App-tree-item {\\n  width: calc(50% - 20px);\\n  margin: 0 10px 20px 10px;\\n  background-color: #eeeeee;\\n  padding: 10px 20px;\\n  border-radius: 10px;\\n}\\n\\n.App-tree-item-title {\\n  font-size: 32px;\\n  margin: 3px 0;\\n}\\n\\n.App-tree-item-subtitle {\\n  font-size: 20px;\\n}\\n\\n.App-tree-item-image {\\n  width: 100%;\\n  margin-top: 10px;\\n  border-radius: 10px;\\n}\\n\\n.App-tree-item-button {\\n  font-size: 14px;\\n  padding: 10px;\\n  background-color: #209b2c;\\n  color: white;\\n  border: 1px solid #DDD;\\n  border-radius: 4px;\\n  outline: none;\\n  cursor: pointer;\\n  font-weight: bold;\\n  margin-top: 10px;\\n}\", \"\"]);\n\n"],"sourceRoot":""}