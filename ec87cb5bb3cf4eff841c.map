{"version":3,"sources":["/Users/sercan/Github/react-native-media-viewer/src/constants.ts","/Users/sercan/Github/react-native-media-viewer/src/helpers.ts","/Users/sercan/Github/react-native-media-viewer/src/styles.ts","/Users/sercan/Github/react-native-media-viewer/src/App.tsx","/Users/sercan/Github/react-native-media-viewer/App.js","/Users/sercan/Github/react-native-media-viewer/web-build/register-service-worker.js"],"names":["pixabayApi","query","PIXABAY_API_URL","TAGS","SETTINGS","theme","webStorage","WebStorage","storage","AsyncStorageFactory","create","setData","key","value","a","async","set","getData","get","windowSize","Dimensions","imageHeight","Math","round","width","styles","app","paddingTop","paddingBottom","height","backgroundColor","button","padding","paddingLeft","paddingRight","borderRadius","borderColor","borderWidth","margin","searchForm","justifyContent","flexDirection","searchButtonView","marginLeft","marginTop","searchButton","fontSize","searchInput","tags","flexWrap","marginBottom","marginRight","maxWidth","message","color","alignSelf","loader","flex","alignItems","position","top","opacity","zIndex","footer","bottom","left","display","footerLink","pictureHolder","picture","pictureInfo","App","then","result","JSON","stringify","useState","pictures","setPictures","setQuery","settingsCounter","setSettingsCounter","setMessage","isLoading","setIsLoading","limit","setLimit","settings","setSettings","setTags","useEffect","parse","importedStyles","getPictures","tag","keyword","trim","Array","isArray","length","Date","getTime","axios","response","data","hits","insertTag","newPictures","forEach","item","push","image","webformatURL","isDeleted","setTimeout","indexOf","unshift","lastTap","handleToggleInfo","index","showInfo","showSettings","filteredPictures","filter","slice","View","style","TextInput","onChangeText","text","toLowerCase","onSubmitEditing","placeholder","selectTextOnFocus","map","TouchableHighlight","underlayColor","onPress","Text","ActivityIndicator","size","TouchableWithoutFeedback","onLongPress","now","handleDoubleTap","Image","resizeMode","source","uri","deletePicture","split","borderLeftWidth","newSettings","updateSettings","localStorage","setItem","window","oncontextmenu","event","preventDefault","stopPropagation","navigator","addEventListener","serviceWorker","register","scope","info","catch","error","console"],"mappings":"wOAOaA,EAAa,SAACC,GAAD,MAA8BC,uEACnDD,EADqB,yEAKbE,EAAO,CAAC,UAAW,SAAU,WAC7BC,EAAW,CAAEC,MAAO,S,yBCP3BC,EAAa,I,OAAIC,GAEjBC,EAAUC,IAAoBC,OAAOJ,EAAY,IAE1CK,EAAU,SAAOC,EAAaC,GAApB,SAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEbN,EAAQQ,IAAIJ,EAAKC,IAFJ,8GAQVI,EAAU,SAAOL,GAAP,SAAAE,EAAAC,OAAA,2EAAAD,EAAA,MAENN,EAAQU,IAAIN,IAFN,gIChBjBO,E,MAAaC,EAAWF,IAAI,UAC5BG,EAAcC,KAAKC,MAAyB,EAAnBJ,EAAWK,MAAY,IAqHvCC,EAlHA,CACbC,IAAK,CACHC,WAAY,GACZC,cAAe,GACfC,OAAQ,OACRC,gBAAiB,WAEnBC,OAAQ,CACND,gBAAiB,OACjBE,QAAS,EACTC,YAAa,EACbC,aAAc,EACdC,aAAc,EACdC,YAAa,OACbC,YAAa,EACbb,MAAO,cACPc,OAAQ,GAEVC,WAAY,CACVC,eAAgB,SAChBC,cAAe,OAEjBC,iBAAkB,CAChBb,OAAQ,GACRc,WAAY,GACZC,UAAW,GAEbC,aAAc,CACZhB,OAAQ,GACRG,QAAS,EACTc,SAAU,GACVX,aAAc,GAEhBY,YAAa,CACXD,SAAU,GACVd,QAAS,EACTF,gBAAiB,OACjBM,YAAa,OACbC,YAAa,EACbF,aAAc,EACdX,MAAO,IACPK,OAAQ,IAEVmB,KAAM,CACJP,cAAe,MACfQ,SAAU,OACVT,eAAgB,SAChBI,UAAW,GACXM,aAAc,GACdP,WAAY,OACZQ,YAAa,OACbC,SAAU,KAEZC,QAAS,CACPJ,SAAU,OACVT,eAAgB,SAChBI,UAAW,GACXU,MAAO,MACPR,SAAU,GACVS,UAAW,UAEbC,OAAQ,CACNC,KAAM,EACNhB,cAAe,MACfD,eAAgB,eAChBkB,WAAY,SACZC,SAAU,WACVC,IAAK,EACLpC,MAAO,OACPM,gBAAiB,OACjBD,OAAQ,OACRgC,QAAS,GACTC,OAAQ,EACRlC,cAAe,KAEjBmC,OAAQ,CACNjC,gBAAiB,UACjBE,QAAS,OACT2B,SAAU,WACVnC,MAAO,OACPwC,OAAQ,EACRC,KAAM,EACNC,QAAS,OACT1B,eAAgB,SAChBC,cAAe,MACfQ,SAAU,QAEZkB,WAAY,CACV7B,OAAQ,MACRF,YAAa,OACbJ,QAAS,EACTC,YAAa,GACbC,aAAc,IAEhBkC,cAAe,CACb3B,cAAe,SACfD,eAAgB,SAChBmB,SAAU,WACVD,WAAY,UAEdW,QAAS,CACPzB,UAAW,KACXM,aAAc,MACd1B,MAzGeL,EAAWK,MA0G1BK,OAAQR,EAAc,IAExBiD,YAAa,CACXX,SAAU,WACVK,OAAQ,MACRvB,cAAe,MACfc,UAAW,W,ijBC1Gf,IA+TegB,EA/TC,WFiBdtD,EAAQ,YAAYuD,MAAK,SAAAC,GACR,OAAXA,GACF9D,EAAQ,WAAY+D,KAAKC,UAAU,KAAKH,UAI5CvD,EAAQ,QAAQuD,MAAK,SAAAC,GACJ,OAAXA,GACF9D,EAAQ,OAAQ+D,KAAKC,UAAUxE,IAAOqE,UAI1CvD,EAAQ,YAAYuD,MAAK,SAAAC,GACR,OAAXA,GACF9D,EAAQ,WAAY+D,KAAKC,UAAUvE,IAAWoE,UE/B9B,MAGYI,mBAAqB,IAHjC,WAGbC,EAHa,KAGHC,EAHG,OAKMF,mBAAiB,IALvB,WAKb3E,EALa,KAKN8E,EALM,OAM0BH,mBAAiB,GAN3C,WAMbI,EANa,KAMIC,EANJ,OAOUL,mBAAwB,MAPlC,WAObvB,EAPa,KAOJ6B,EAPI,OAQcN,oBAAkB,GARhC,WAQbO,EARa,KAQFC,EARE,OASMR,mBAAiB,IATvB,WASbS,EATa,KASNC,EATM,OAUYV,mBAAmBxE,GAV/B,WAUbmF,EAVa,KAUHC,EAVG,OAWIZ,mBAAmBzE,GAXvB,WAWb6C,EAXa,KAWPyC,EAXO,KAapBC,qBAAW,WACTzE,EAAQ,YAAYuD,MAAK,SAACe,GACxBC,EAAYd,KAAKiB,MAAMJ,OAEzBtE,EAAQ,QAAQuD,MAAK,SAACxB,GACpByC,EAAQf,KAAKiB,MAAM3C,OAErB/B,EAAQ,YAAYuD,MAAK,SAACK,GACxBC,EAAYJ,KAAKiB,MAAMd,SAExB,IAEH,IAAIpD,EAASmE,EACLvF,EAAUkF,EAAVlF,MAEM,UAAVA,IACFoB,EAAM,KACDmE,EADC,CAEJlE,IAAI,EAAD,GAAOkE,EAAelE,IAAtB,CAA2BI,gBAAiB,eAInD,IAAM+D,GAAc,SAAOC,GAAP,qBAAAhF,EAAAC,OAAA,mDACZgF,EAAUD,EAAIE,OACpBd,EAAW,MACXI,EAAS,IAEHW,MAAMC,QAAQrB,EAASkB,KACxBlB,EAASkB,GAASI,UACnB7E,KAAKC,OAAM,IAAI6E,MAAOC,UAAY,KAAQxB,EAAYkB,EAAJ,eAA4B,OAPhE,wBAShBX,GAAa,GATG,WAAAtE,EAAA,MAUOwF,IAAMpF,IAAIlB,EAAW+F,KAV5B,OAUVQ,EAVU,QAWVC,EAAOD,EAASC,KAAKC,MAElBN,QACPO,GAAUX,GAEJY,EAA0B,GAEhCH,EAAKI,SAAQ,SAACC,GACZF,EAAYG,KAAK,CACfC,MAAOF,EAAKG,aACZhE,KAAM6D,EAAK7D,KACXiE,WAAW,OAIfpC,EAASkB,GAAWY,EACpB9B,EAAYkB,EAAJ,eAA4BzE,KAAKC,OAAM,IAAI6E,MAAOC,UAAY,KACtE1F,EAAQ,WAAY+D,KAAKC,UAAUE,IACnCC,EAAY,EAAD,GAAKD,KAEhBqC,YAAW,WACThC,EAAW,gCACV,KAGLgC,YAAW,WACT9B,GAAa,KACZ,KAtCa,yBAwCe,IAA3BpC,EAAKmE,QAAQpB,IACfW,GAAUX,GAzCI,uCA8CdW,GAAY,SAACZ,GACL,KAARA,IAAqC,IAAvB9C,EAAKmE,QAAQrB,KAC7B9C,EAAKoE,QAAQtB,GACbL,EAAQzC,GACRrC,EAAQ,OAAQ+D,KAAKC,UAAU3B,MAoB/BqE,GAAU,KAERC,GAAmB,SAACC,GACxB1C,EAAS5E,GAAOsH,GAAOC,UAAY3C,EAAS5E,GAAOsH,GAAOC,SAC1D1C,EAAY,EAAD,GAAKD,KA+BZ4C,GAAe,WACnBxC,EAAmBD,EAAkB,IA6BjC0C,GAAmB7C,EAAS5E,GAAS4E,EAAS5E,GAAO0H,QAAO,SAAAtD,GAAO,OAAKA,EAAQ4C,aAAWW,MAAM,EAAGvC,GAAS,GAEnH,OACE,kBAACwC,EAAA,EAAD,CAAMC,MAAOrG,EAAOC,KAClB,kBAACmG,EAAA,EAAD,CAAMC,MAAOrG,EAAOc,YAClB,kBAACwF,EAAA,EAAD,CACED,MAAOrG,EAAOsB,YACdlC,MAAOZ,EACP+H,aAAc,SAACC,GAAD,OA1CD,SAACA,GACpBlD,EAASkD,EAAKC,eAyC8BF,CAAaC,IACnDE,gBAnDS,WACftC,GAAY5F,IAmDNmI,YAAY,4BACZC,mBAAiB,KAGrB,kBAACR,EAAA,EAAD,CAAMC,MAAOrG,EAAOuB,MACjBA,EAAKsF,KAAI,SAACxC,GAAD,OACR,kBAACyC,EAAA,EAAD,CACI3H,IAAKkF,EACLgC,MAAOrG,EAAOM,OACdyG,cAAc,UACdC,QAAS,WACP1D,EAASe,GACTD,GAAYC,KAGhB,kBAAC4C,EAAA,EAAD,KAAO5C,QAKZzC,GAAW,kBAACqF,EAAA,EAAD,CAAMZ,MAAOrG,EAAO4B,SAAUA,GAEzC8B,GACC,kBAAC0C,EAAA,EAAD,CAAMC,MAAOrG,EAAO+B,QAClB,kBAACmF,EAAA,EAAD,CAAmBC,KAAK,QAAQtF,MAAM,cAIxC6B,GAAyC,IAA5BuC,GAAiBvB,QAChC,kBAAC0B,EAAA,EAAD,CAAMC,MAAOrG,EAAO2C,eACjBsD,GAAiBY,KAAI,SAACjE,EAASkD,GAAV,OACpB,kBAACsB,EAAA,EAAD,CACEjI,IAAKyD,EAAQ0C,MACb+B,YAAa,kBAAYxB,GAAiBC,IAC1CkB,QAAS,kBAtGK,SAAClB,GACvB,IAAMwB,EAAM3C,KAAK2C,MACb1B,IAAY0B,EAAM1B,GAAW,IAC/BC,GAAiBC,GAEjBF,GAAU0B,EAiGiBC,CAAgBzB,KAErC,kBAACM,EAAA,EAAD,CAAMC,MAAOrG,EAAO2C,eAClB,kBAAC6E,EAAA,EAAD,CACEnB,MAAOrG,EAAO4C,QACd6E,WAAY,QACZC,OAAQ,CAACC,IAAK/E,EAAQ0C,SAGvB1C,EAAQmD,UACP,kBAACK,EAAA,EAAD,CAAMC,MAAOrG,EAAO6C,aAClB,kBAACiE,EAAA,EAAD,CACEC,cAAc,UACdV,MAAK,KAAMrG,EAAOM,OAAb,CAAqBY,WAAY,EAAGQ,YAAa,IACtDsF,QAAS,kBA3GL,SAAClB,GACrB1C,EAAS5E,GAAOsH,GAAON,WAAY,EACnCpC,EAAY5E,EAAJ,eAA0BqB,KAAKC,OAAM,IAAI6E,MAAOC,UAAY,KACpE1F,EAAQ,WAAY+D,KAAKC,UAAUE,IACnCC,EAAY,EAAD,GAAKD,IAuGqBwE,CAAc9B,KAEnC,kBAACmB,EAAA,EAAD,WAEiBrE,EAAQrB,KA9EhBsG,MAAM,KACZhB,KAAI,SAACxC,GAAD,OACrB,kBAACyC,EAAA,EAAD,CACE3H,IAAKkF,EACLgC,MAAK,KAAMrG,EAAOM,OAAb,CAAqBY,WAAY,EAAGQ,YAAa,IACtDqF,cAAc,UACdC,QAAS,WACN1D,EAASe,EAAIE,QACbH,GAAYC,KAGf,kBAAC4C,EAAA,EAAD,KAAO5C,aA0EP,kBAACyC,EAAA,EAAD,CACET,MAAK,KAAMrG,EAAOM,OAAb,CAAqBmB,aAAc,GAAIP,WAAY,OAAQQ,YAAa,SAC7EqF,cAAc,UACdC,QAAS,kBAAYnD,EAASD,EAAQ,MAEtC,kBAACqD,EAAA,EAAD,oBAKJ,kBAACb,EAAA,EAAD,CAAMC,MAAOrG,EAAOsC,QACjBiB,EAAkB,GACjB,oCACE,kBAACuD,EAAA,EAAD,CACIT,MAAOrG,EAAO0C,WACdqE,cAAc,OACdC,QAAS,WAAchB,OAEzB,kBAACiB,EAAA,EAAD,sBAEF,kBAACH,EAAA,EAAD,CACIT,MAAK,KAAMrG,EAAO0C,WAAb,CAAyBoF,gBAAiB,IAC/Cf,cAAc,OACdC,QAAS,YAtHA,SAAC7H,EAAaC,GACnC,IAAM2I,EAAW,KACZjE,EADY,OAEd3E,EAAMC,IAET2E,EAAYgE,GACZ7I,EAAQ,WAAY+D,KAAKC,UAAU6E,IAgHAC,CAAe,QAAmB,SAAVpJ,EAAmB,QAAU,UAE9E,kBAACqI,EAAA,EAAD,KAAiB,SAAVrI,EAAmB,QAAU,OAApC,WAIL2E,EAAkB,IAAM,kBAACuD,EAAA,EAAD,CACrBT,MAAOrG,EAAO0C,WACdsE,QAAS,kBAAYhB,MACrBe,cAAc,QAEhB,kBAACE,EAAA,EAAD,4BAGmB,IAApB1D,GAAyB,kBAACuD,EAAA,EAAD,CACtBT,MAAOrG,EAAO0C,WACdsE,QAAS,kBAAYhB,MACrBe,cAAc,QAEhB,kBAACE,EAAA,EAAD,kBAGD1D,EAAkB,GAAK,kBAACuD,EAAA,EAAD,CACpBT,MAAOrG,EAAO0C,WACdsE,QAAS,kBAAYxD,EAAmB,IACxCuD,cAAc,QAEhB,kBAACE,EAAA,EAAD,cAGD1D,EAAkB,GAAK,kBAACuD,EAAA,EAAD,CACpBT,MAAK,KAAMrG,EAAO0C,WAAb,CAAyBoF,gBAAiB,IAC/Cf,cAAc,OACdC,QAAS,WACPiB,aAAaC,QAAQ,OAAQjF,KAAKC,UAAU,KAC5Cc,EAAQ,IACRV,EAAS,MAGb,kBAAC2D,EAAA,EAAD,oBAGD1D,EAAkB,GAAK,kBAACuD,EAAA,EAAD,CACpBT,MAAK,KAAMrG,EAAO0C,WAAb,CAAyBoF,gBAAiB,IAC/Cf,cAAc,OACdC,QAAS,WACT3D,EAAY,IACZ4E,aAAaC,QAAQ,WAAYjF,KAAKC,UAAU,OAGlD,kBAAC+D,EAAA,EAAD,wBC/TVkB,OAAOC,cAAgB,SAACC,GAGtB,OAFAA,EAAMC,iBACND,EAAME,mBACC,GAGMzF,O,4DCPX,kBAAmB0F,WACrBL,OAAOM,iBAAiB,QAAQ,WAC9BD,UAAUE,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7C7F,MAAK,SAAS8F,OAGdC,OAAM,SAASC,GACdC,QAAQH,KAAK,oCAAqCE,W","file":"static/js/app.4aee379b.chunk.js","sourcesContent":["import {\n  PIXABAY_API_URL,\n  PIXABAY_API_KEY,\n  FREESOUND_API_URL,\n  FREESOUND_API_KEY,\n} from '../config'\n\nexport const pixabayApi = (query: string): string => `${PIXABAY_API_URL}?key=${PIXABAY_API_KEY}\n&q=${query}&image_type=photo&safesearch=true&orientation=horizontal&per_page=100`\nexport const freesoundApi = (query: string): string => `${FREESOUND_API_URL}?query=${query}&token=${FREESOUND_API_KEY}\n&normalized=true&fields=previews,description&sort=downloads_desc&filter=duration:[1 TO 5]`\n\nexport const TAGS = ['animals', 'fruits', 'planets']\nexport const SETTINGS = { theme: 'light' }","import AsyncStorageFactory from '@react-native-community/async-storage';\nimport WebStorage from '@react-native-community/async-storage-backend-web';\n//import LegacyStorage from '@react-native-community/async-storage-backend-legacy';\n\nimport { TAGS, SETTINGS } from './constants'\n\nconst webStorage = new WebStorage();\n//const legacyStorage = new LegacyStorage();\nconst storage = AsyncStorageFactory.create(webStorage, {});\n\nexport const setData = async (key: string, value: string): Promise<void> => {\n  try {\n    await storage.set(key, value)\n  } catch (e) {\n    // throw error\n  }\n}\n\nexport const getData = async (key: string): Promise<void> => {\n  try {\n    return await storage.get(key)\n  } catch(e) {\n    // throw error\n  }\n}\n\nexport const initLocalStorage = (): void => {\n  getData('pictures').then(result => {\n    if (result === null) {\n      setData('pictures', JSON.stringify({})).then()\n    }\n  })\n\n  getData('tags').then(result => {\n    if (result === null) {\n      setData('tags', JSON.stringify(TAGS)).then()\n    }\n  })\n\n  getData('settings').then(result => {\n    if (result === null) {\n      setData('settings', JSON.stringify(SETTINGS)).then()\n    }\n  })\n}\n","import {ViewStyle, ImageStyle, Dimensions } from \"react-native\";\n\nconst windowSize = Dimensions.get('window');\nconst imageHeight = Math.round(windowSize.width * 9 / 16);\nconst imageWidth = windowSize.width;\n\nconst styles = {\n  app: {\n    paddingTop: 15,\n    paddingBottom: 10,\n    height: '100%',\n    backgroundColor: '#000000',\n  },\n  button: {\n    backgroundColor: '#eee',\n    padding: 3,\n    paddingLeft: 8,\n    paddingRight: 8,\n    borderRadius: 4,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    width: 'fit-content',\n    margin: 2,\n  } as ViewStyle,\n  searchForm: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  } as ViewStyle,\n  searchButtonView: {\n    height: 40,\n    marginLeft: 12,\n    marginTop: 3,\n  },\n  searchButton: {\n    height: 48,\n    padding: 4,\n    fontSize: 18,\n    borderRadius: 7,\n  },\n  searchInput: {\n    fontSize: 16,\n    padding: 8,\n    backgroundColor: '#eee',\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 5,\n    width: 260,\n    height: 40,\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: 15,\n    marginBottom: 15,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxWidth: 800,\n  } as ViewStyle,\n  message: {\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: 25,\n    color: 'red',\n    fontSize: 16,\n    alignSelf: 'center',\n  } as ViewStyle,\n  loader: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    backgroundColor: '#FFF',\n    height: '100%',\n    opacity: 0.7,\n    zIndex: 1,\n    paddingBottom: 100,\n  } as ViewStyle,\n  footer: {\n    backgroundColor: '#ececec',\n    padding: '10 0',\n    position: 'absolute',\n    width: '100%',\n    bottom: 0,\n    left: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  } as ViewStyle,\n  footerLink: {\n    margin: '0 5',\n    borderColor: '#ddd',\n    padding: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n  } as ViewStyle,\n  pictureHolder: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    position: 'relative',\n    alignItems: 'center',\n  } as ViewStyle,\n  picture: {\n    marginTop: '5%',\n    marginBottom: '10%',\n    width: imageWidth,\n    height: imageHeight + 80,\n  } as ImageStyle,\n  pictureInfo: {\n    position: 'absolute',\n    bottom: '17%',\n    flexDirection: 'row',\n    alignSelf: 'center',\n  } as ViewStyle,\n}\n\nexport default styles\n","import React, { FC, useState, useEffect } from 'react'\nimport { View, Text, TextInput, TouchableHighlight, TouchableWithoutFeedback, Image, ActivityIndicator } from 'react-native'\n//import Constants from 'expo-constants';\nimport axios from 'axios'\nimport { pixabayApi, TAGS, SETTINGS } from './constants'\nimport { initLocalStorage, getData, setData } from './helpers'\nimport { ApiResults, Pictures, Settings } from './types'\n\nimport importedStyles from './styles'\n\nconst App: FC = () => {\n  initLocalStorage()\n\n  const [pictures, setPictures] = useState<Pictures[]>([])\n  /* const [sounds, setSounds] = useState([]) */\n  const [query, setQuery] = useState<string>('')\n  const [settingsCounter, setSettingsCounter] = useState<number>(0)\n  const [message, setMessage] = useState<string | null>(null)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [limit, setLimit] = useState<number>(10)\n  const [settings, setSettings] = useState<Settings>(SETTINGS)\n  const [tags, setTags] = useState<string[]>(TAGS)\n\n  useEffect( () => {\n    getData('settings').then((settings) => {\n      setSettings(JSON.parse(settings))\n    })\n    getData('tags').then((tags) => {\n      setTags(JSON.parse(tags))\n    })\n    getData('pictures').then((pictures) => {\n      setPictures(JSON.parse(pictures))\n    })\n  }, [])\n\n  let styles = importedStyles\n  const { theme } = settings\n\n  if (theme === 'light') {\n    styles = {\n      ...importedStyles,\n      app: { ...importedStyles.app, backgroundColor: '#FFFFFF' },\n    }\n  }\n\n  const getPictures = async (tag: string): Promise<void> => {\n    const keyword = tag.trim()\n    setMessage(null)\n    setLimit(10)\n\n    if ((!Array.isArray(pictures[keyword]) ||\n        !pictures[keyword].length) ||\n        Math.round(new Date().getTime() / 1000) - pictures[`${keyword}_lastUpdate`] > 12 * 60 * 60\n    ) {\n      setIsLoading(true)\n      const response = await axios.get(pixabayApi(keyword))\n      const data = response.data.hits\n\n      if (data.length) {\n        insertTag(keyword)\n\n        const newPictures: Pictures[] = []\n\n        data.forEach((item: ApiResults) => {\n          newPictures.push({\n            image: item.webformatURL,\n            tags: item.tags,\n            isDeleted: false,\n          })\n        })\n\n        pictures[keyword] = newPictures\n        pictures[`${keyword}_lastUpdate`] = Math.round(new Date().getTime() / 1000)\n        setData('pictures', JSON.stringify(pictures))\n        setPictures({...pictures})\n      } else {\n        setTimeout(() => {\n          setMessage('Couldn\\'t find any results ')\n        }, 500)\n      }\n\n      setTimeout(() => {\n        setIsLoading(false)\n      }, 500)\n    } else {\n      if (tags.indexOf(keyword) === -1) {\n        insertTag(keyword)\n      }\n    }\n  }\n\n  const insertTag = (tag: string): void => {\n    if (tag !== '' && tags.indexOf(tag) === -1) {\n      tags.unshift(tag)\n      setTags(tags)\n      setData('tags', JSON.stringify(tags))\n    }\n  }\n\n  /* const getSounds = async (query) => {\n    const response = await axios.get(freesoundApi(query))\n    const sounds = response.data.results\n    // console.log(sounds)\n    setSounds(sounds)\n    playAudio(sounds[0].previews['preview-lq-mp3'])\n  } */\n\n  /* const playAudio = (fileName) => {\n    if (sound) {\n      sound.pause()\n    }\n    sound = new Audio(fileName)\n    sound.play()\n  } */\n\n  let lastTap = null;\n\n  const handleToggleInfo = (index: number): void => {\n    pictures[query][index].showInfo = !pictures[query][index].showInfo\n    setPictures({...pictures})\n  }\n\n  const handleDoubleTap = (index: number) => {\n    const now = Date.now();\n    if (lastTap && (now - lastTap) < 200) {\n      handleToggleInfo(index);\n    } else {\n      lastTap = now;\n    }\n  }\n\n  const deletePicture = (index: number): void => {\n    pictures[query][index].isDeleted = true\n    pictures[`${query}_lastUpdate`] = Math.round(new Date().getTime() / 1000)\n    setData('pictures', JSON.stringify(pictures))\n    setPictures({...pictures})\n  }\n\n  const onSubmit = (): void => {\n    getPictures(query)\n  }\n\n  /* const onChange = (event: React.SyntheticEvent): void => {\n    setQuery(event.target.value.toLowerCase())\n  }*/\n\n  const onChangeText = (text: string): void => {\n    setQuery(text.toLowerCase())\n  }\n\n  const showSettings = (): void => {\n    setSettingsCounter(settingsCounter + 1)\n  }\n\n  const updateSettings = (key: string, value: string): void => {\n    const newSettings = {\n      ...settings,\n      [key]: value,\n    }\n    setSettings(newSettings)\n    setData('settings', JSON.stringify(newSettings))\n  }\n\n  const renderPictureTags = (text: string): object => {\n    const pictureTags = text.split(',')\n    return pictureTags.map((tag) => (\n      <TouchableHighlight\n        key={tag}\n        style={{...styles.button, marginLeft: 2, marginRight: 2}}\n        underlayColor=\"#cccccc\"\n        onPress={(): void => {\n           setQuery(tag.trim())\n           getPictures(tag)\n        }}\n      >\n        <Text>{tag}</Text>\n      </TouchableHighlight>\n    ))\n  }\n\n  const filteredPictures = pictures[query] ? pictures[query].filter(picture => !picture.isDeleted).slice(0, limit) : []\n\n  return (\n    <View style={styles.app}>\n      <View style={styles.searchForm}>\n        <TextInput\n          style={styles.searchInput}\n          value={query}\n          onChangeText={(text: string): void => onChangeText(text)}\n          onSubmitEditing={onSubmit}\n          placeholder=\"cats, planets, fruits,...\"\n          selectTextOnFocus\n        />\n      </View>\n      <View style={styles.tags}>\n        {tags.map((tag) => (\n          <TouchableHighlight\n              key={tag}\n              style={styles.button}\n              underlayColor=\"#cccccc\"\n              onPress={(): void => {\n                setQuery(tag)\n                getPictures(tag)\n              }}\n          >\n            <Text>{tag}</Text>\n          </TouchableHighlight>\n        ))}\n      </View>\n\n      {message && <Text style={styles.message}>{message}</Text>}\n\n      {isLoading && (\n        <View style={styles.loader}>\n          <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n        </View>\n      )}\n\n      {!isLoading && filteredPictures.length !== 0 && (\n      <View style={styles.pictureHolder}>\n        {filteredPictures.map((picture, index) => (\n          <TouchableWithoutFeedback\n            key={picture.image}\n            onLongPress={(): void => handleToggleInfo(index)}\n            onPress={(): void => handleDoubleTap(index)}\n          >\n            <View style={styles.pictureHolder} >\n              <Image\n                style={styles.picture}\n                resizeMode={'cover'}\n                source={{uri: picture.image}}\n              />\n\n              {picture.showInfo && (\n                <View style={styles.pictureInfo}>\n                  <TouchableHighlight\n                    underlayColor=\"#cccccc\"\n                    style={{...styles.button, marginLeft: 2, marginRight: 2}}\n                    onPress={(): void => deletePicture(index, query) }\n                  >\n                    <Text>x</Text>\n                  </TouchableHighlight>\n                  {renderPictureTags(picture.tags)}\n                </View>\n              )}\n            </View>\n          </TouchableWithoutFeedback>\n        ))}\n\n        <TouchableHighlight\n          style={{...styles.button, marginBottom: 50, marginLeft: 'auto', marginRight: 'auto'}}\n          underlayColor=\"#cccccc\"\n          onPress={(): void => setLimit(limit + 10) }\n        >\n          <Text>Load More</Text>\n        </TouchableHighlight>\n      </View>\n      )}\n\n      <View style={styles.footer}>\n        {settingsCounter < 4 && (\n          <>\n            <TouchableHighlight\n                style={styles.footerLink}\n                underlayColor=\"#ccc\"\n                onPress={(): void => { showSettings() }}\n            >\n              <Text>Media Viewer</Text>\n            </TouchableHighlight>\n            <TouchableHighlight\n                style={{...styles.footerLink, borderLeftWidth: 1}}\n                underlayColor=\"#ccc\"\n                onPress={(): void => { updateSettings('theme', theme === 'dark' ? 'light' : 'dark') }}\n            >\n              <Text>{theme === 'dark' ? 'Light' : 'Dark'} Mode</Text>\n            </TouchableHighlight>\n          </>\n        )}\n        {settingsCounter > 20 && <TouchableHighlight\n            style={styles.footerLink}\n            onPress={(): void => showSettings()}\n            underlayColor=\"#ccc\"\n        >\n          <Text>Language (English)</Text>\n        </TouchableHighlight>}\n\n        {settingsCounter === 4 && <TouchableHighlight\n            style={styles.footerLink}\n            onPress={(): void => showSettings()}\n            underlayColor=\"#ccc\"\n        >\n          <Text>Settings</Text>\n        </TouchableHighlight>}\n\n        {settingsCounter > 4 && <TouchableHighlight\n            style={styles.footerLink}\n            onPress={(): void => setSettingsCounter(0)}\n            underlayColor=\"#ccc\"\n        >\n          <Text>Back</Text>\n        </TouchableHighlight>}\n\n        {settingsCounter > 4 && <TouchableHighlight\n            style={{...styles.footerLink, borderLeftWidth: 1}}\n            underlayColor=\"#ccc\"\n            onPress={(): void => {\n              localStorage.setItem('tags', JSON.stringify([]))\n              setTags([])\n              setQuery('')\n            }}\n        >\n          <Text>Clear tags</Text>\n        </TouchableHighlight>}\n\n        {settingsCounter > 4 && <TouchableHighlight\n            style={{...styles.footerLink, borderLeftWidth: 1}}\n            underlayColor=\"#ccc\"\n            onPress={(): void => {\n            setPictures([])\n            localStorage.setItem('pictures', JSON.stringify({}))\n            }}\n        >\n          <Text>Clear cache</Text>\n        </TouchableHighlight>}\n      </View>\n    </View>\n  )\n}\n\nexport default App\n","import React  from 'react'\nimport App from './src/App'\n\nwindow.oncontextmenu = (event) => {\n  event.preventDefault()\n  event.stopPropagation()\n  return false\n}\n\nexport default App","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}