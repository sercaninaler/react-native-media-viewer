{"version":3,"sources":["/Users/sercan/Github/react-native-media-viewer/src/constants.ts","/Users/sercan/Github/react-native-media-viewer/src/helpers.ts","/Users/sercan/Github/react-native-media-viewer/src/styles.ts","/Users/sercan/Github/react-native-media-viewer/src/App.tsx","/Users/sercan/Github/react-native-media-viewer/App.js","/Users/sercan/Github/react-native-media-viewer/web-build/register-service-worker.js"],"names":["pixabayApi","query","PIXABAY_API_URL","tags","settings","imageWidth","theme","localStorageTags","localStorage","getItem","JSON","parse","localStorageSettings","dimensions","Dimensions","get","imageHeight","Math","round","width","styles","app","paddingTop","paddingBottom","height","backgroundColor","button","padding","paddingLeft","paddingRight","borderRadius","borderColor","borderWidth","searchForm","justifyContent","flexDirection","searchButtonView","marginLeft","marginTop","searchButton","fontSize","searchInput","flexWrap","marginBottom","marginRight","maxWidth","tag","margin","message","color","alignSelf","loader","display","alignItems","position","top","opacity","zIndex","AppFooter","bottom","left","AppFooterItem","pictureHolder","picture","pictureInfo","App","setItem","stringify","useState","pictures","setPictures","setQuery","setTags","settingsCounter","setSettingsCounter","setSettings","setMessage","isLoading","setIsLoading","limit","setLimit","importedStyles","insertTag","indexOf","unshift","getPictures","keyword","a","async","pictureQuery","trim","localData","Array","isArray","length","Date","getTime","axios","response","data","hits","newPictures","forEach","item","push","image","webformatURL","isDeleted","showInfo","setTimeout","showSettings","updateSettings","key","value","newSettings","filteredPictures","filter","slice","View","style","TextInput","onChangeText","text","toLowerCase","onSubmitEditing","placeholder","selectTextOnFocus","map","TouchableHighlight","onPress","Text","type","timeout","size","enable","right","window","innerWidth","topRight","bottomRight","bottomLeft","topLeft","onResizeStop","e","d","x","parseInt","String","toString","index","Image","resizeMode","source","uri","onClick","togglePicture","underlayColor","deletePicture","split","borderLeftWidth","navigator","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"kQAOaA,EAAa,SAACC,GAAD,MAA8BC,uEACnDD,EADqB,yDCPpBE,EAAO,CAAC,UAAW,SAAU,WAC7BC,EAAW,CAAEC,WAAY,IAAKC,MAAO,SAc9BC,EAAmBC,aAAaC,QAAQ,QAAUC,KAAKC,MAAMH,aAAaC,QAAQ,SAAW,IAAMN,EACnGS,EAAuBJ,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,IAAML,ECdtHS,E,MAAaC,EAAWC,IAAI,UAC5BC,EAAcC,KAAKC,MAAyB,EAAnBL,EAAWM,MAAY,IAiIvCC,EA9HA,CACbC,IAAK,CACHC,WAAY,GACZC,cAAe,GACfC,OAAQ,OACRC,gBAAiB,WAEnBC,OAAQ,CACND,gBAAiB,OACjBE,QAAS,EACTC,YAAa,GACbC,aAAc,GACdC,aAAc,EACdC,YAAa,OACbC,YAAa,EACbb,MAAO,eAETc,WAAY,CACVC,eAAgB,SAChBC,cAAe,OAEjBC,iBAAkB,CAChBZ,OAAQ,GACRa,WAAY,GACZC,UAAW,GAEbC,aAAc,CACZf,OAAQ,GACRG,QAAS,EACTa,SAAU,GACVV,aAAc,GAEhBW,YAAa,CACXD,SAAU,GACVb,QAAS,EACTF,gBAAiB,OACjBM,YAAa,OACbC,YAAa,EACbF,aAAc,EACdX,MAAO,IACPK,OAAQ,IAEVrB,KAAM,CACJgC,cAAe,MACfO,SAAU,OACVR,eAAgB,SAChBI,UAAW,GACXK,aAAc,GACdN,WAAY,OACZO,YAAa,OACbC,SAAU,KAEZC,IAAK,CACHC,OAAQ,EACRtB,gBAAiB,OACjBE,QAAS,EACTC,YAAa,GACbC,aAAc,GACdC,aAAc,EACdC,YAAa,OACbC,YAAa,GAEfgB,QAAS,CACPN,SAAU,OACVR,eAAgB,SAChBI,UAAW,GACXW,MAAO,MACPT,SAAU,GACVU,UAAW,UAEbC,OAAQ,CACNC,QAAS,OACTjB,cAAe,SACfD,eAAgB,SAChBmB,WAAY,SACZC,SAAU,WACVC,IAAK,EACLpC,MAAO,OACPM,gBAAiB,OACjBD,OAAQ,OACRgC,QAAS,GACTC,OAAQ,EACRlC,cAAe,KAEjBmC,UAAW,CACTjC,gBAAiB,UACjBE,QAAS,OACT2B,SAAU,WACVnC,MAAO,OACPwC,OAAQ,EACRC,KAAM,EACNR,QAAS,OACTlB,eAAgB,SAChBC,cAAe,MACfO,SAAU,QAEZmB,cAAe,CACbd,OAAQ,MACRhB,YAAa,UACbJ,QAAS,EACTC,YAAa,GACbC,aAAc,IAEhBiC,cAAe,CACb3B,cAAe,MACfO,SAAU,OACVR,eAAgB,UAGlB6B,QAAS,CACPzB,UAAW,KACXK,aAAc,MACdW,SAAU,WACVnC,MAnHeN,EAAWM,MAmHN,GACpBK,OAAQR,EACRc,aAAc,IAEhBkC,YAAa,CACXV,SAAU,WACVK,OAAQ,KACRhC,QAAS,GACTQ,cAAe,MACfe,UAAW,W,ijBCpGf,IAkUee,EAlUC,WFxBTzD,aAAaC,QAAQ,aACxBD,aAAa0D,QAAQ,WAAYxD,KAAKyD,UAAU,KAE7C3D,aAAaC,QAAQ,SACxBD,aAAa0D,QAAQ,OAAQxD,KAAKyD,UAAUhE,IAEzCK,aAAaC,QAAQ,aACxBD,aAAa0D,QAAQ,WAAYxD,KAAKyD,UAAU/D,IEiB9B,MAGYgE,mBAAqB,IAHjC,WAGbC,EAHa,KAGHC,EAHG,OAKMF,mBAAiB,IALvB,WAKbnE,EALa,KAKNsE,EALM,OAMIH,mBAAmB7D,GANvB,WAMbJ,EANa,KAMPqE,EANO,OAO0BJ,mBAAiB,GAP3C,WAObK,EAPa,KAOIC,EAPJ,OAQYN,mBAAmBxD,GAR/B,WAQbR,EARa,KAQHuE,EARG,OASUP,mBAAwB,MATlC,WASbpB,EATa,KASJ4B,EATI,OAUcR,oBAAkB,GAVhC,WAUbS,EAVa,KAUFC,EAVE,OAWMV,mBAAiB,IAXvB,WAWbW,EAXa,KAWNC,EAXM,KAahB5D,EAAS6D,EACL3E,GAAsBF,EAAtBE,MAAOD,GAAeD,EAAfC,WAED,UAAVC,KACFc,EAAM,KACD6D,EADC,CAEJ5D,IAAI,EAAD,GAAO4D,EAAe5D,IAAtB,CAA2BI,gBAAiB,eAInD,IAAMyD,GAAY,SAACpC,GACL,KAARA,IAAqC,IAAvB3C,EAAKgF,QAAQrC,KAC7B3C,EAAKiF,QAAQtC,GACb0B,EAAQrE,GACRK,aAAa0D,QAAQ,OAAQxD,KAAKyD,UAAUhE,MAI1CkF,GAAc,SAAOC,GAAP,uBAAAC,EAAAC,OAAA,mDACZC,EAAeH,EAAQI,OAC7Bd,EAAW,MACXI,EAAS,IACHW,EAAYjF,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,IAE3DmF,MAAMC,QAAQF,EAAUF,KACzBE,EAAUF,GAAcK,UACzB7E,KAAKC,OAAM,IAAI6E,MAAOC,UAAY,KAAQL,EAAaF,EAAJ,eAAiC,OARtE,wBAUhBX,GAAa,GAVG,WAAAS,EAAA,MAWOU,IAAMlF,IAAIf,EAAWyF,KAX5B,OAWVS,EAXU,QAYVC,EAAOD,EAASC,KAAKC,MAElBN,QACDO,EAA0B,GAEhCF,EAAKG,SAAQ,SAACC,GACZF,EAAYG,KAAK,CACfC,MAAOF,EAAKG,aACZvG,KAAMoG,EAAKpG,KACXwG,WAAW,EACXC,UAAU,OAIdjB,EAAUF,GAAgBY,EAC1BV,EAAaF,EAAJ,eAAiCxE,KAAKC,OAAM,IAAI6E,MAAOC,UAAY,KAC5ExF,aAAa0D,QAAQ,WAAYxD,KAAKyD,UAAUwB,IAChDrB,EAAY+B,GAEZnB,GAAUO,KAEVoB,YAAW,WACTjC,EAAW,gCACV,KACHN,EAAY,KAEduC,YAAW,WACT/B,GAAa,KACZ,KAxCa,wBA0ChBR,EAAYqB,EAAUF,KAEc,IAAhCtF,EAAKgF,QAAQM,IACfP,GAAUO,GA7CI,uCAgGdqB,GAAe,WACnBpC,EAAmBD,EAAkB,IAGjCsC,GAAiB,SAACC,EAAaC,GACnC,IAAMC,EAAW,KACZ9G,EADY,OAEd4G,EAAMC,IAETtC,EAAYuC,GACZ1G,aAAa0D,QAAQ,WAAYxD,KAAKyD,UAAU+C,KAoB5CC,GAAmB9C,EAAS+C,QAAO,SAAArD,GAAO,OAAKA,EAAQ4C,aAAWU,MAAM,EAAGtC,GAIjF,OACE,kBAACuC,EAAA,EAAD,CAAMC,MAAOnG,EAAOC,KAClB,kBAACiG,EAAA,EAAD,CAAMC,MAAOnG,EAAOa,YAClB,kBAACuF,EAAA,EAAD,CACED,MAAOnG,EAAOqB,YACdwE,MAAOhH,EACPwH,aAAc,SAACC,GAAD,OA5CD,SAACA,GACpBnD,EAASmD,EAAKC,eA2C8BF,CAAaC,IACnDE,gBArDS,WACfvC,GAAYpF,IAqDN4H,YAAY,4BACZC,mBAAiB,KAGrB,kBAACR,EAAA,EAAD,CAAMC,MAAOnG,EAAOjB,MACjBA,EAAK4H,KAAI,SAACjF,GAAD,OACR,kBAACkF,EAAA,EAAD,CACIhB,IAAKlE,EACLyE,MAAOnG,EAAO0B,IACdmF,QAAS,WACP1D,EAASzB,GACTuC,GAAYvC,KAGhB,kBAACoF,EAAA,EAAD,KAAOpF,QAKZE,GAAW,kBAACkF,EAAA,EAAD,CAAMX,MAAOnG,EAAO4B,SAAUA,GAEzC6B,GACC,kBAACyC,EAAA,EAAD,CAAMC,MAAOnG,EAAO+B,QAClB,kBAAC,IAAD,CACEgF,KAAK,eACLlF,MAAM,OACNzB,OAAQ,IACRL,MAAO,IACPiH,QAAS,QAKbvD,GAAiC,IAApBR,EAASyB,QACxB,kBAACwB,EAAA,EAAD,CAAMC,MAAOnG,EAAO0C,eAClB,kBAAC,YAAD,CACEuE,KAAM,CAAClH,MAAOd,GAAYmB,OAAQ,QAClC8G,OAAQ,CACN/E,KAAK,EACLgF,MAAOC,OAAOC,WAAapI,GAC3BsD,QAAQ,EACRC,KAAM4E,OAAOC,WAAapI,GAC1BqI,UAAU,EACVC,aAAa,EACbC,YAAY,EACZC,SAAS,GAEXC,aAAc,SAACC,EAAGC,EAAGC,EAAGZ,GAAiBtB,GAAe,cAAemC,SAASC,OAAO9I,KAAe6I,SAASC,OAAOd,EAAKlH,SAASiI,cAEnIjC,GAAiBY,KAAI,SAAChE,EAASsF,GAAV,OACpB,kBAAC/B,EAAA,EAAD,CAAMC,MAAOnG,EAAO0C,cAAekD,IAAKjD,EAAQ0C,OAC9C,kBAAC6C,EAAA,EAAD,CACE/B,MAAOnG,EAAO2C,QACdwF,WAAY,QACZC,OAAQ,CAACC,IAAK1F,EAAQ0C,OACtBiD,QAAS,kBA/HD,SAACL,GACrB,IAAMhD,EAAW,IAAOhC,GACxBgC,EAAYgD,GAAOzC,UAAYP,EAAYgD,GAAOzC,SAElDtC,EAAY+B,GA2HqBsD,CAAcN,MAGpCtF,EAAQ6C,SACP,kBAACU,EAAA,EAAD,CAAMC,MAAOnG,EAAO4C,aAClB,kBAACgE,EAAA,EAAD,CACI4B,cAAc,UACdrC,MAAK,KAAMnG,EAAOM,OAAb,CAAqBW,WAAY,EAAGO,YAAa,IACtDqF,QAAS,kBAhIP,SAACoB,EAAevG,GACpC,IAAMuD,EAAW,IAAOhC,GACxBgC,EAAYgD,GAAO1C,WAAY,EAC/BrC,EAAY+B,GAEZ,IAAMV,EAAYjF,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,IACjEkF,EAAU7C,GAAOuD,EACjBV,EAAa7C,EAAJ,eAAwB7B,KAAKC,OAAM,IAAI6E,MAAOC,UAAY,KACnExF,aAAa0D,QAAQ,WAAYxD,KAAKyD,UAAUwB,IAwHTkE,CAAcR,EAAOpJ,KAE5C,kBAACiI,EAAA,EAAD,WAEUnE,EAAQ5D,KA/FT2J,MAAM,KACZ/B,KAAI,SAACjF,GAAD,OACrB,kBAACkF,EAAA,EAAD,CACEhB,IAAKlE,EACLyE,MAAK,KAAMnG,EAAOM,OAAb,CAAqBW,WAAY,EAAGO,YAAa,IACtDgH,cAAc,UACd3B,QAAS,WACN1D,EAASzB,GACTuC,GAAYvC,KAGf,kBAACoF,EAAA,EAAD,KAAOpF,QAsFG,SAIR,kBAACkF,EAAA,EAAD,CACIT,MAAK,KAAMnG,EAAOM,OAAb,CAAqBiB,aAAc,GAAIN,WAAY,OAAQO,YAAa,SAC7EgH,cAAc,UACd3B,QAAS,kBAAYjD,EAASD,EAAQ,MAExC,kBAACmD,EAAA,EAAD,qBAMN,kBAACZ,EAAA,EAAD,CAAMC,MAA2BnG,EAAOsC,WACrCe,EAAkB,GACjB,oCACE,kBAACuD,EAAA,EAAD,CACIT,MAAOnG,EAAOyC,cACd+F,cAAc,OACd3B,QAAS,WAAcnB,OAEzB,kBAACoB,EAAA,EAAD,sBAEF,kBAACF,EAAA,EAAD,CACIT,MAAK,KAAMnG,EAAOyC,cAAb,CAA4BkG,gBAAiB,IAClDH,cAAc,OACd3B,QAAS,WAAclB,GAAe,QAAmB,SAAVzG,GAAmB,QAAU,UAE9E,kBAAC4H,EAAA,EAAD,KAAiB,SAAV5H,GAAmB,QAAU,OAApC,WAILmE,EAAkB,IAAM,kBAACuD,EAAA,EAAD,CACrBT,MAAOnG,EAAOyC,cACdoE,QAAS,kBAAYnB,MACrB8C,cAAc,QAEhB,kBAAC1B,EAAA,EAAD,4BAGmB,IAApBzD,GAAyB,kBAACuD,EAAA,EAAD,CACtBT,MAAOnG,EAAOyC,cACdoE,QAAS,kBAAYnB,MACrB8C,cAAc,QAEhB,kBAAC1B,EAAA,EAAD,kBAGDzD,EAAkB,GAAK,kBAACuD,EAAA,EAAD,CACpBT,MAAOnG,EAAOyC,cACdoE,QAAS,kBAAYvD,EAAmB,IACxCkF,cAAc,QAEhB,kBAAC1B,EAAA,EAAD,cAGDzD,EAAkB,GAAK,kBAACuD,EAAA,EAAD,CACpBT,MAAK,KAAMnG,EAAOyC,cAAb,CAA4BkG,gBAAiB,IAClDH,cAAc,OACd3B,QAAS,WACPzH,aAAa0D,QAAQ,OAAQxD,KAAKyD,UAAU,KAC5CK,EAAQ,MAGZ,kBAAC0D,EAAA,EAAD,oBAGDzD,EAAkB,GAAK,kBAACuD,EAAA,EAAD,CACpBT,MAAK,KAAMnG,EAAOyC,cAAb,CAA4BkG,gBAAiB,IAClDH,cAAc,OACd3B,QAAS,WACT3D,EAAY,IACZ9D,aAAa0D,QAAQ,WAAYxD,KAAKyD,UAAU,OAGlD,kBAAC+D,EAAA,EAAD,wBCpVKjE,O,4DCDX,kBAAmB+F,WACrBxB,OAAOyB,iBAAiB,QAAQ,WAC9BD,UAAUE,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAASC,OAGdC,OAAM,SAASC,GACdC,QAAQH,KAAK,oCAAqCE,W","file":"static/js/app.76283b82.chunk.js","sourcesContent":["import {\n  PIXABAY_API_URL,\n  PIXABAY_API_KEY,\n  FREESOUND_API_URL,\n  FREESOUND_API_KEY,\n} from '../config'\n\nexport const pixabayApi = (query: string): string => `${PIXABAY_API_URL}?key=${PIXABAY_API_KEY}\n&q=${query}&image_type=photo&orientation=horizontal&per_page=100`\nexport const freesoundApi = (query: string): string => `${FREESOUND_API_URL}?query=${query}&token=${FREESOUND_API_KEY}\n&normalized=true&fields=previews,description&sort=downloads_desc&filter=duration:[1 TO 5]`\n","const tags = ['animals', 'fruits', 'planets']\nconst settings = { imageWidth: 640, theme: 'light' }\n\nexport const initLocalStorage = (): void => {\n  if (!localStorage.getItem('pictures')) {\n    localStorage.setItem('pictures', JSON.stringify({}))\n  }\n  if (!localStorage.getItem('tags')) {\n    localStorage.setItem('tags', JSON.stringify(tags))\n  }\n  if (!localStorage.getItem('settings')) {\n    localStorage.setItem('settings', JSON.stringify(settings))\n  }\n}\n\nexport const localStorageTags = localStorage.getItem('tags') ? JSON.parse(localStorage.getItem('tags') || '') : tags\nexport const localStorageSettings = localStorage.getItem('settings') ? JSON.parse(localStorage.getItem('settings') || '') : settings\n","import {ViewStyle, ImageStyle, Dimensions } from \"react-native\";\n\nconst dimensions = Dimensions.get('window');\nconst imageHeight = Math.round(dimensions.width * 9 / 16);\nconst imageWidth = dimensions.width;\n\nconst styles = {\n  app: {\n    paddingTop: 15,\n    paddingBottom: 30,\n    height: '100%',\n    backgroundColor: '#000000',\n  },\n  button: {\n    backgroundColor: '#eee',\n    padding: 6,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 5,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    width: 'fit-content',\n  } as ViewStyle,\n  searchForm: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  } as ViewStyle,\n  searchButtonView: {\n    height: 40,\n    marginLeft: 12,\n    marginTop: 3,\n  },\n  searchButton: {\n    height: 48,\n    padding: 4,\n    fontSize: 18,\n    borderRadius: 7,\n  },\n  searchInput: {\n    fontSize: 16,\n    padding: 8,\n    backgroundColor: '#eee',\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 5,\n    width: 260,\n    height: 40,\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: 15,\n    marginBottom: 15,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxWidth: 800,\n  } as ViewStyle,\n  tag: {\n    margin: 5,\n    backgroundColor: '#eee',\n    padding: 5,\n    paddingLeft: 11,\n    paddingRight: 11,\n    borderRadius: 5,\n    borderColor: '#ddd',\n    borderWidth: 1,\n  },\n  message: {\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: 25,\n    color: 'red',\n    fontSize: 16,\n    alignSelf: 'center',\n  } as ViewStyle,\n  loader: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    backgroundColor: '#000',\n    height: '100%',\n    opacity: 0.6,\n    zIndex: 1,\n    paddingBottom: 100,\n  } as ViewStyle,\n  AppFooter: {\n    backgroundColor: '#ececec',\n    padding: '10 0',\n    position: 'absolute',\n    width: '100%',\n    bottom: 0,\n    left: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  } as ViewStyle,\n  AppFooterItem: {\n    margin: '0 5',\n    borderColor: '#999999',\n    padding: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n  } as ViewStyle,\n  pictureHolder: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    //overflow: 'hidden',\n  } as ViewStyle,\n  picture: {\n    marginTop: '4%',\n    marginBottom: '10%',\n    position: 'relative',\n    width: imageWidth - 20,\n    height: imageHeight,\n    borderRadius: 10,\n  } as ImageStyle,\n  pictureInfo: {\n    position: 'absolute',\n    bottom: '3%',\n    padding: 10,\n    flexDirection: 'row',\n    alignSelf: 'center',\n  } as ViewStyle,\n}\n\nexport default styles\n","import React, { FC, useState } from 'react'\nimport { View, Text, TextInput, TouchableHighlight, Image } from 'react-native'\n//import Constants from 'expo-constants';\nimport axios from 'axios'\nimport Loader from 'react-loader-spinner'\nimport { Resizable } from 're-resizable'\nimport { pixabayApi } from './constants'\nimport { initLocalStorage, localStorageTags, localStorageSettings } from './helpers'\n\nimport importedStyles from './styles'\n\ntype ApiResults = {\n  webformatURL: string;\n  tags: string;\n}\n\ntype Settings = {\n  theme: string;\n  imageWidth: number;\n}\n\ntype Pictures = {\n  isDeleted: boolean;\n  showInfo: boolean;\n  image: string;\n  tags: string;\n}\n\nconst App: FC = () => {\n  initLocalStorage()\n\n  const [pictures, setPictures] = useState<Pictures[]>([])\n  /* const [sounds, setSounds] = useState([]) */\n  const [query, setQuery] = useState<string>('')\n  const [tags, setTags] = useState<string[]>(localStorageTags)\n  const [settingsCounter, setSettingsCounter] = useState<number>(0)\n  const [settings, setSettings] = useState<Settings>(localStorageSettings )\n  const [message, setMessage] = useState<string | null>(null)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [limit, setLimit] = useState<number>(10)\n\n  let styles = importedStyles\n  const { theme, imageWidth } = settings\n\n  if (theme === 'light') {\n    styles = {\n      ...importedStyles,\n      app: { ...importedStyles.app, backgroundColor: '#FFFFFF' },\n    }\n  }\n\n  const insertTag = (tag: string): void => {\n    if (tag !== '' && tags.indexOf(tag) === -1) {\n      tags.unshift(tag)\n      setTags(tags)\n      localStorage.setItem('tags', JSON.stringify(tags))\n    }\n  }\n\n  const getPictures = async (keyword: string): Promise<void> => {\n    const pictureQuery = keyword.trim()\n    setMessage(null)\n    setLimit(10)\n    const localData = JSON.parse(localStorage.getItem('pictures') || '')\n\n    if ((!Array.isArray(localData[pictureQuery]) ||\n        !localData[pictureQuery].length) ||\n        Math.round(new Date().getTime() / 1000) - localData[`${pictureQuery}_lastUpdate`] > 12 * 60 * 60\n    ) {\n      setIsLoading(true)\n      const response = await axios.get(pixabayApi(pictureQuery))\n      const data = response.data.hits\n\n      if (data.length) {\n        const newPictures: Pictures[] = []\n\n        data.forEach((item: ApiResults) => {\n          newPictures.push({\n            image: item.webformatURL,\n            tags: item.tags,\n            isDeleted: false,\n            showInfo: false,\n          })\n        })\n\n        localData[pictureQuery] = newPictures\n        localData[`${pictureQuery}_lastUpdate`] = Math.round(new Date().getTime() / 1000)\n        localStorage.setItem('pictures', JSON.stringify(localData))\n        setPictures(newPictures)\n\n        insertTag(pictureQuery)\n      } else {\n        setTimeout(() => {\n          setMessage('Couldn\\'t find any results ')\n        }, 500)\n        setPictures([])\n      }\n      setTimeout(() => {\n        setIsLoading(false)\n      }, 500)\n    } else {\n      setPictures(localData[pictureQuery])\n\n      if (tags.indexOf(pictureQuery) === -1) {\n        insertTag(pictureQuery)\n      }\n    }\n  }\n\n  /* const getSounds = async (query) => {\n    const response = await axios.get(freesoundApi(query))\n    const sounds = response.data.results\n    // console.log(sounds)\n    setSounds(sounds)\n    playAudio(sounds[0].previews['preview-lq-mp3'])\n  } */\n\n  /* const playAudio = (fileName) => {\n    if (sound) {\n      sound.pause()\n    }\n    sound = new Audio(fileName)\n    sound.play()\n  } */\n\n  const togglePicture = (index: number): void => {\n    const newPictures = [...pictures]\n    newPictures[index].showInfo = !newPictures[index].showInfo\n\n    setPictures(newPictures)\n  }\n\n  const deletePicture = (index: number, tag: string): void => {\n    const newPictures = [...pictures]\n    newPictures[index].isDeleted = true\n    setPictures(newPictures)\n\n    const localData = JSON.parse(localStorage.getItem('pictures') || '')\n    localData[tag] = newPictures\n    localData[`${tag}_lastUpdate`] = Math.round(new Date().getTime() / 1000)\n    localStorage.setItem('pictures', JSON.stringify(localData))\n  }\n\n  const onSubmit = (): void => {\n    getPictures(query)\n  }\n\n  /* const onChange = (event: React.SyntheticEvent): void => {\n    setQuery(event.target.value.toLowerCase())\n  }*/\n\n  const onChangeText = (text: string): void => {\n    setQuery(text.toLowerCase())\n  }\n\n  const showSettings = (): void => {\n    setSettingsCounter(settingsCounter + 1)\n  }\n\n  const updateSettings = (key: string, value: string): void => {\n    const newSettings = {\n      ...settings,\n      [key]: value,\n    }\n    setSettings(newSettings)\n    localStorage.setItem('settings', JSON.stringify(newSettings))\n  }\n\n  const renderTags = (text: string): object => {\n    const pictureTags = text.split(',')\n    return pictureTags.map((tag) => (\n      <TouchableHighlight\n        key={tag}\n        style={{...styles.button, marginLeft: 2, marginRight: 2}}\n        underlayColor=\"#cccccc\"\n        onPress={(): void => {\n           setQuery(tag)\n           getPictures(tag)\n        }}\n      >\n        <Text>{tag}</Text>\n      </TouchableHighlight>\n    ))\n  }\n\n  const filteredPictures = pictures.filter(picture => !picture.isDeleted).slice(0, limit)\n\n  //console.log(Constants)\n\n  return (\n    <View style={styles.app}>\n      <View style={styles.searchForm}>\n        <TextInput\n          style={styles.searchInput}\n          value={query}\n          onChangeText={(text: string): void => onChangeText(text)}\n          onSubmitEditing={onSubmit}\n          placeholder=\"cats, planets, fruits,...\"\n          selectTextOnFocus\n        />\n      </View>\n      <View style={styles.tags}>\n        {tags.map((tag) => (\n          <TouchableHighlight\n              key={tag}\n              style={styles.tag}\n              onPress={(): void => {\n                setQuery(tag)\n                getPictures(tag)\n              }}\n          >\n            <Text>{tag}</Text>\n          </TouchableHighlight>\n        ))}\n      </View>\n\n      {message && <Text style={styles.message}>{message}</Text>}\n\n      {isLoading && (\n        <View style={styles.loader}>\n          <Loader\n            type=\"BallTriangle\"\n            color=\"#FFF\"\n            height={100}\n            width={100}\n            timeout={500000}\n          />\n        </View>\n      )}\n\n      {!isLoading && pictures.length !== 0 && (\n      <View style={styles.pictureHolder}>\n        <Resizable\n          size={{width: imageWidth, height: 'auto'}}\n          enable={{\n            top: false,\n            right: window.innerWidth > imageWidth,\n            bottom: false,\n            left: window.innerWidth > imageWidth,\n            topRight: false,\n            bottomRight: false,\n            bottomLeft: false,\n            topLeft: false,\n          }}\n          onResizeStop={(e, d, x, size): void => { updateSettings('imageWidth', (parseInt(String(imageWidth)) + parseInt(String(size.width))).toString()) }}\n        >\n          {filteredPictures.map((picture, index) => (\n            <View style={styles.pictureHolder} key={picture.image}>\n              <Image\n                style={styles.picture}\n                resizeMode={'cover'}\n                source={{uri: picture.image}}\n                onClick={(): void => togglePicture(index)}\n              />\n\n              {picture.showInfo ? (\n                <View style={styles.pictureInfo}>\n                  <TouchableHighlight\n                      underlayColor=\"#cccccc\"\n                      style={{...styles.button, marginLeft: 2, marginRight: 2}}\n                      onPress={(): void => deletePicture(index, query) }\n                  >\n                    <Text>x</Text>\n                  </TouchableHighlight>\n                  {renderTags(picture.tags)}\n                </View>\n              ) : null}\n            </View>\n            ))}\n\n          <TouchableHighlight\n              style={{...styles.button, marginBottom: 50, marginLeft: 'auto', marginRight: 'auto'}}\n              underlayColor=\"#cccccc\"\n              onPress={(): void => setLimit(limit + 10) }\n          >\n            <Text>Load More</Text>\n          </TouchableHighlight>\n        </Resizable>\n      </View>\n      )}\n\n      <View style={theme === 'light' ? styles.AppFooter : styles.AppFooter}>\n        {settingsCounter < 4 && (\n          <>\n            <TouchableHighlight\n                style={styles.AppFooterItem}\n                underlayColor=\"#ccc\"\n                onPress={(): void => { showSettings() }}\n            >\n              <Text>Media Viewer</Text>\n            </TouchableHighlight>\n            <TouchableHighlight\n                style={{...styles.AppFooterItem, borderLeftWidth: 1}}\n                underlayColor=\"#ccc\"\n                onPress={(): void => { updateSettings('theme', theme === 'dark' ? 'light' : 'dark') }}\n            >\n              <Text>{theme === 'dark' ? 'Light' : 'Dark'} Mode</Text>\n            </TouchableHighlight>\n          </>\n        )}\n        {settingsCounter > 20 && <TouchableHighlight\n            style={styles.AppFooterItem}\n            onPress={(): void => showSettings()}\n            underlayColor=\"#ccc\"\n        >\n          <Text>Language (English)</Text>\n        </TouchableHighlight>}\n\n        {settingsCounter === 4 && <TouchableHighlight\n            style={styles.AppFooterItem}\n            onPress={(): void => showSettings()}\n            underlayColor=\"#ccc\"\n        >\n          <Text>Settings</Text>\n        </TouchableHighlight>}\n\n        {settingsCounter > 4 && <TouchableHighlight\n            style={styles.AppFooterItem}\n            onPress={(): void => setSettingsCounter(0)}\n            underlayColor=\"#ccc\"\n        >\n          <Text>Back</Text>\n        </TouchableHighlight>}\n\n        {settingsCounter > 4 && <TouchableHighlight\n            style={{...styles.AppFooterItem, borderLeftWidth: 1}}\n            underlayColor=\"#ccc\"\n            onPress={(): void => {\n              localStorage.setItem('tags', JSON.stringify([]))\n              setTags([])\n            }}\n        >\n          <Text>Clear tags</Text>\n        </TouchableHighlight>}\n\n        {settingsCounter > 4 && <TouchableHighlight\n            style={{...styles.AppFooterItem, borderLeftWidth: 1}}\n            underlayColor=\"#ccc\"\n            onPress={(): void => {\n            setPictures([])\n            localStorage.setItem('pictures', JSON.stringify({}))\n            }}\n        >\n          <Text>Clear cache</Text>\n        </TouchableHighlight>}\n      </View>\n    </View>\n  )\n}\n\nexport default App\n","import React  from 'react'\nimport App from './src/App'\n\nexport default App","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}