{"version":3,"sources":["/Users/sercan/Github/react-native-media-viewer/assets/fonts/UbuntuMono-R.ttf","/Users/sercan/Github/react-native-media-viewer/src/constants.ts","/Users/sercan/Github/react-native-media-viewer/src/helpers.ts","/Users/sercan/Github/react-native-media-viewer/src/styles.ts","/Users/sercan/Github/react-native-media-viewer/src/components.tsx","/Users/sercan/Github/react-native-media-viewer/src/App.tsx","/Users/sercan/Github/react-native-media-viewer/App.js","/Users/sercan/Github/react-native-media-viewer/web-build/register-service-worker.js"],"names":["module","exports","pixabayApi","query","lang","PIXABAY_API_URL","TAGS","SETTINGS","language","resolution","suggestions","theme","storage","localStorage","setData","key","value","a","async","setItem","getData","getItem","getStyles","styles","app","paddingTop","paddingBottom","height","backgroundColor","overflow","button","paddingLeft","paddingRight","borderRadius","borderColor","borderWidth","margin","justifyContent","buttonText","fontFamily","fontSize","searchForm","flexDirection","searchButtonView","marginLeft","marginTop","searchButton","padding","searchInput","width","color","tags","flexWrap","marginBottom","marginRight","maxWidth","message","alignSelf","loader","flex","alignItems","position","top","opacity","zIndex","footer","bottom","left","display","footerLink","pictureHolder","picture","pictureInfo","Button","props","useContext","ThemeContext","TouchableHighlight","style","addStyles","underlayColor","onPress","Text","text","React","createContext","App","then","result","JSON","stringify","useState","pictures","setPictures","setQuery","settingsCounter","setSettingsCounter","setMessage","isLoading","setIsLoading","showLinks","setShowLinks","limit","setLimit","settings","setSettings","setTags","Dimensions","get","useEffect","parse","updateSettings","newSettings","insertTag","tag","indexOf","unshift","getPictures","keyword","trim","Array","isArray","length","Math","round","Date","getTime","axios","response","data","hits","newPictures","forEach","item","push","image","webformatURL","imageBig","largeImageURL","isDeleted","setTimeout","lastTap","handleDoubleTap","index","now","showInfo","handleToggleInfo","filteredPictures","filter","slice","recommendedTags","split","Provider","View","TextInput","onChangeText","toLowerCase","onSubmitEditing","placeholder","selectTextOnFocus","map","ActivityIndicator","size","ScrollView","TouchableWithoutFeedback","source","uri","deletePicture","borderLeftWidth","Platform","OS","window","oncontextmenu","event","preventDefault","stopPropagation","AppContainer","Font","require","navigator","addEventListener","serviceWorker","register","scope","info","catch","error","console"],"mappings":"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","file":"static/js/app.abd4153c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/UbuntuMono-R.ttf\";","import {\n  PIXABAY_API_URL,\n  PIXABAY_API_KEY,\n  FREESOUND_API_URL,\n  FREESOUND_API_KEY,\n} from '../config'\n\nexport const pixabayApi = (query: string, lang: string): string => `${PIXABAY_API_URL}?key=${PIXABAY_API_KEY}\n&q=${query}&lang=${lang}&image_type=photo&safesearch=true&orientation=horizontal&per_page=50`\nexport const freesoundApi = (query: string): string => `${FREESOUND_API_URL}?query=${query}&token=${FREESOUND_API_KEY}\n&normalized=true&fields=previews,description&sort=downloads_desc&filter=duration:[1 TO 5]`\n\nexport const TAGS = ['animals', 'fruits', 'planets']\nexport const SETTINGS = {\n  language: 'en',\n  resolution: 640,\n  suggestions: false,\n  theme: 'light',\n}","//import { Platform } from 'react-native'\n//import AsyncStorage from '@react-native-community/async-storage'\n\nconst storage = localStorage\n//const storage = Platform.OS === 'web' ? window.localstorage : AsyncStorage\n\nimport { TAGS, SETTINGS } from './constants'\n\nexport const setData = async (key: string, value: string): Promise<void> => {\n  try {\n    await storage.setItem(key, value)\n  } catch (e) {\n    // throw error\n  }\n}\n\nexport const getData = async (key: string): Promise<string | null | undefined> => {\n  try {\n    return await storage.getItem(key)\n  } catch(e) {\n    // throw error\n  }\n}\n\nexport const initLocalStorage = (): void => {\n  getData('pictures').then(result => {\n    if (result === null) {\n      setData('pictures', JSON.stringify({})).then()\n    }\n  })\n\n  getData('tags').then(result => {\n    if (result === null) {\n      setData('tags', JSON.stringify(TAGS)).then()\n    }\n  })\n\n  getData('settings').then(result => {\n    if (result === null) {\n      setData('settings', JSON.stringify(SETTINGS)).then()\n    }\n  })\n}\n","import {ViewStyle, ImageStyle, TextStyle} from 'react-native'\n\nexport const getStyles = (theme: string) => {\n  let styles = {\n    app: {\n      paddingTop: 30,\n      paddingBottom: 30,\n      height: '100%',\n      backgroundColor: '#FFF',\n      overflow: 'hidden',\n    } as ViewStyle,\n    button: {\n      backgroundColor: '#EEE',\n      paddingLeft: 8,\n      paddingRight: 8,\n      borderRadius: 4,\n      borderColor: '#DDD',\n      borderWidth: 1,\n      margin: 3,\n      justifyContent: 'center',\n      height: 26,\n    } as ViewStyle,\n    buttonText: {\n      fontFamily: 'Ubuntu Mono',\n      fontSize: 16,\n    } as TextStyle,\n    searchForm: {\n      justifyContent: 'center',\n      flexDirection: 'row',\n    } as ViewStyle,\n    searchButtonView: {\n      height: 40,\n      marginLeft: 12,\n      marginTop: 3,\n    },\n    searchButton: {\n      height: 48,\n      padding: 4,\n      fontSize: 18,\n      borderRadius: 7,\n    },\n    searchInput: {\n      fontSize: 18,\n      padding: 8,\n      paddingLeft: 10,\n      backgroundColor: '#f8f8f8',\n      borderColor: '#ddd',\n      borderWidth: 1,\n      borderRadius: 5,\n      width: 300,\n      height: 36,\n      fontFamily: 'Ubuntu Mono',\n      color: '#000',\n      //outline: 'none',\n    },\n    tags: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      marginTop: 15,\n      marginBottom: 60,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      maxWidth: 800,\n      paddingLeft: 5,\n      paddingRight: 5,\n    } as ViewStyle,\n    message: {\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      marginTop: 25,\n      color: 'red',\n      fontSize: 16,\n      alignSelf: 'center',\n    } as ViewStyle,\n    loader: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      position: 'absolute',\n      top: 0,\n      width: '100%',\n      backgroundColor: '#FFF',\n      height: '100%',\n      opacity: 0.6,\n      zIndex: 1,\n      paddingBottom: 100,\n    } as ViewStyle,\n    footer: {\n      backgroundColor: '#ececec',\n      position: 'absolute',\n      width: '100%',\n      bottom: 0,\n      left: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n    } as ViewStyle,\n    footerLink: {\n      borderWidth: 0,\n      borderColor: '#CCC',\n      padding: 5,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRadius: 0,\n      margin: 0,\n    } as ViewStyle,\n    pictureHolder: {\n      flexDirection: 'column',\n      position: 'relative',\n      maxWidth: 1280,\n      alignSelf: 'center',\n    } as ViewStyle,\n    picture: {\n      marginTop: '5%',\n      marginBottom: '20%',\n    } as ImageStyle,\n    pictureInfo: {\n      position: 'absolute',\n      bottom: '17%',\n      flexDirection: 'row',\n      alignSelf: 'center',\n    } as ViewStyle,\n  }\n\n  if (theme === 'dark') {\n    styles = {\n      ...styles,\n      app: {\n        ...styles.app,\n        backgroundColor: '#000'\n      },\n      loader: {\n        ...styles.loader,\n        backgroundColor: '#000',\n      },\n      searchInput: {\n        ...styles.searchInput,\n        backgroundColor: '#333',\n        borderColor: '#525252',\n        color: '#DDDDDD',\n      },\n      button: {\n        ...styles.button,\n        backgroundColor: '#333',\n        borderColor: '#525252',\n      },\n      buttonText: {\n        ...styles.buttonText,\n        color: '#aaaaaa',\n      },\n      footer: {\n        ...styles.footer,\n        backgroundColor: '#333',\n      },\n      footerLink: {\n        ...styles.footerLink,\n        borderColor: '#5a5a5a',\n      }\n    }\n  }\n\n  return styles\n}\n","import {Text, TouchableHighlight} from 'react-native'\nimport React, { FC, useContext } from 'react'\nimport { getStyles } from './styles'\nimport { ThemeContext } from './App'\nimport { ButtonType } from './types'\n\nexport const Button: FC<ButtonType> = (props: ButtonType) => {\n  const theme = useContext(ThemeContext)\n  const styles = getStyles(theme)\n\n  return (\n    <TouchableHighlight\n      style={{...styles.button, ...props.addStyles}}\n      underlayColor={theme === 'dark' ? '#555' : '#ccc'}\n      onPress={props.onPress}\n    >\n      <Text style={styles.buttonText}>{props.text}</Text>\n    </TouchableHighlight>\n  )\n}","import React, { FC, useState, useEffect } from 'react'\nimport {\n  View,\n  Text,\n  ScrollView,\n  TextInput,\n  TouchableWithoutFeedback,\n  ActivityIndicator,\n  Dimensions,\n} from 'react-native'\nimport axios from 'axios'\nimport { pixabayApi, SETTINGS } from './constants'\nimport { initLocalStorage, getData, setData } from './helpers'\nimport { Button } from './components'\nimport { ApiResults, PictureType, Settings } from './types'\nimport Image from 'react-native-scalable-image'\n\nimport { getStyles } from './styles'\n\nexport const ThemeContext = React.createContext('light');\n\nconst App: FC = () => {\n  initLocalStorage()\n\n  const [pictures, setPictures] = useState<PictureType[]>([])\n  /* const [sounds, setSounds] = useState([]) */\n  const [query, setQuery] = useState<string>('')\n  const [settingsCounter, setSettingsCounter] = useState<number>(0)\n  const [message, setMessage] = useState<string | null>(null)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [showLinks, setShowLinks] = useState<boolean>(false)\n  const [limit, setLimit] = useState<number>(10)\n  const [settings, setSettings] = useState<Settings>(SETTINGS)\n  const [tags, setTags] = useState<string[]>([])\n\n  const width = Dimensions.get('window').width\n  const { theme, language, suggestions, resolution } = settings\n  const styles = getStyles(theme)\n\n  useEffect( () => {\n    getData('settings').then((settings) => {\n      if (settings) {\n        setSettings(JSON.parse(settings))\n      }\n    })\n    getData('tags').then((tags) => {\n      if (tags) {\n        setTags(JSON.parse(tags))\n      }\n    })\n    getData('pictures').then((pictures) => {\n      if (pictures) {\n        setPictures(JSON.parse(pictures))\n      }\n    })\n\n    /*\n    Dimensions.addEventListener(\"change\", (e) => {\n      console.log(e.window);\n    });\n    */\n  }, [])\n\n  const updateSettings = (key: string, value: string | boolean | number): void => {\n    const newSettings = {\n      ...settings,\n      [key]: value,\n    }\n    setSettings(newSettings)\n    setData('settings', JSON.stringify(newSettings))\n  }\n\n  const insertTag = (tag: string): void => {\n    if (tag !== '' && tags.indexOf(tag) === -1) {\n      tags.unshift(tag)\n      setTags(tags)\n      setData('tags', JSON.stringify(tags))\n    }\n  }\n\n  const getPictures = async (tag: string): Promise<void> => {\n    const keyword = tag.trim()\n    setMessage(null)\n    setLimit(10)\n    setIsLoading(true)\n    setShowLinks(false)\n    updateSettings('suggestions', false)\n\n    if ((!Array.isArray(pictures[keyword]) ||\n        !pictures[keyword].length) ||\n        Math.round(new Date().getTime() / 1000) - pictures[`${keyword}_lastUpdate`] > 12 * 60 * 60\n    ) {\n      const response = await axios.get(pixabayApi(keyword, language))\n      const data = response.data.hits\n\n      if (data.length) {\n        insertTag(keyword)\n\n        const newPictures: PictureType[] = []\n\n        data.forEach((item: ApiResults) => {\n          newPictures.push({\n            image: item.webformatURL,\n            imageBig: item.largeImageURL,\n            tags: item.tags,\n            isDeleted: false,\n          })\n        })\n\n        pictures[keyword] = newPictures\n        pictures[`${keyword}_lastUpdate`] = Math.round(new Date().getTime() / 1000)\n        setData('pictures', JSON.stringify(pictures))\n        setPictures({...pictures})\n      } else {\n        setTimeout(() => {\n          setMessage('Couldn\\'t find any results ')\n        }, 500)\n      }\n    } else {\n      if (tags.indexOf(keyword) === -1) {\n        insertTag(keyword)\n      }\n    }\n\n    setTimeout(() => {\n      setIsLoading(false)\n    }, 200)\n\n    setTimeout(() => {\n      setShowLinks(true)\n    }, 600)\n  }\n\n  /* const getSounds = async (query) => {\n    const response = await axios.get(freesoundApi(query))\n    const sounds = response.data.results\n    // console.log(sounds)\n    setSounds(sounds)\n    playAudio(sounds[0].previews['preview-lq-mp3'])\n  } */\n\n  /* const playAudio = (fileName) => {\n    if (sound) {\n      sound.pause()\n    }\n    sound = new Audio(fileName)\n    sound.play()\n  } */\n\n  let lastTap: number | null = null;\n\n  const handleToggleInfo = (index: number): void => {\n    pictures[query][index].showInfo = !pictures[query][index].showInfo\n    setPictures({...pictures})\n  }\n\n  const handleDoubleTap = (index: number): void => {\n    const now = Date.now();\n    if (lastTap && (now - lastTap) < 300) {\n      handleToggleInfo(index);\n    } else {\n      lastTap = now;\n    }\n  }\n\n  const deletePicture = (index: number): void => {\n    pictures[query][index].isDeleted = true\n    pictures[`${query}_lastUpdate`] = Math.round(new Date().getTime() / 1000)\n    setData('pictures', JSON.stringify(pictures))\n    setPictures({...pictures})\n  }\n\n  const onSubmit = (): void => {\n    getPictures(query)\n  }\n\n  /* const onChange = (event: React.SyntheticEvent): void => {\n    setQuery(event.target.value.toLowerCase())\n  }*/\n\n  const onChangeText = (text: string): void => {\n    setQuery(text.toLowerCase())\n  }\n\n  const showSettings = (): void => {\n    setSettingsCounter(settingsCounter + 1)\n  }\n\n  const renderPictureTags = (text: string): object => {\n    const pictureTags = text.split(',')\n\n    return pictureTags.map((tag) => (\n      <Button\n        onPress={(): void => {\n          setQuery(tag.trim())\n          getPictures(tag)\n        }}\n        text={tag}\n        key={tag}\n      />\n    ))\n  }\n\n  const filteredPictures = pictures[query] ? pictures[query].filter((picture: PictureType) => !picture.isDeleted).slice(0, limit) : []\n\n  const recommendedTags: string[] = []\n\n  filteredPictures.forEach((picture: PictureType) => {\n    if (picture.tags) {\n      const tags = picture.tags.split(',')\n      tags.forEach((tag) => {\n        tag = tag.trim()\n        if (recommendedTags.indexOf(tag) === -1) {\n          recommendedTags.push(tag)\n        }\n      })\n    }\n  })\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <View style={styles.app}>\n        <View style={styles.searchForm}>\n          <TextInput\n            style={styles.searchInput}\n            value={query}\n            onChangeText={(text: string): void => onChangeText(text)}\n            onSubmitEditing={onSubmit}\n            placeholder=\"cats, planets, fruits,...\"\n            selectTextOnFocus\n          />\n        </View>\n        <View style={styles.tags}>\n          <Button\n            text=\"x\"\n            onPress={(): void => {\n              setQuery('')\n            }}\n          />\n          {tags.map((tag) => (\n            <Button\n              key={tag}\n              text={tag}\n              onPress={(): void => {\n                setQuery(tag)\n                getPictures(tag)\n              }}\n            />\n          ))}\n        </View>\n\n        {message && <Text style={styles.message}>{message}</Text>}\n\n        {isLoading && (\n          <View style={styles.loader}>\n            <ActivityIndicator size=\"large\" color={theme === 'light' ? '#0000ff' : '#FFFFFF'} />\n          </View>\n        )}\n\n        {!isLoading && filteredPictures.length !== 0 && (\n        <ScrollView style={styles.pictureHolder}>\n          {filteredPictures.map((picture: PictureType, index: number) => (\n            <TouchableWithoutFeedback\n              key={picture.image}\n              //onLongPress={(): void => handleToggleInfo(index)}\n              onPress={(): void => handleDoubleTap(index)}\n            >\n              <View style={styles.pictureHolder} >\n                <Image\n                  style={styles.picture}\n                  source={{uri: resolution === 640 ? picture.image : picture.imageBig}}\n                  width={width > resolution ? resolution : width}\n                />\n\n                {picture.showInfo && (\n                  <View style={styles.pictureInfo}>\n                    <Button\n                      onPress={(): void => deletePicture(index)}\n                      text=\"x\"\n                      addStyles={{marginLeft: 2, marginRight: 2}}\n                    />\n\n                    {renderPictureTags(picture.tags)}\n                  </View>\n                )}\n              </View>\n            </TouchableWithoutFeedback>\n          ))}\n\n          {showLinks && <View style={[styles.tags, {marginTop: '-3%', marginBottom: 60}]}>\n            <Button\n              onPress={(): void => setLimit(limit + 10) }\n              text=\"show more pictures\"\n            />\n            <Button\n              onPress={(): void => updateSettings('suggestions', !suggestions) }\n              text=\"show more tags\"\n            />\n          </View>}\n\n          {suggestions && <View style={styles.tags}>\n            {recommendedTags.map((tag) => (\n              <Button\n                key={tag}\n                text={tag}\n                onPress={(): void => {\n                  setQuery(tag)\n                  getPictures(tag)\n                }}\n              />\n            ))}\n          </View>}\n        </ScrollView>\n        )}\n\n        {!query && <View style={[{paddingLeft: 15, paddingRight: 15, marginTop: '20%', maxWidth: 400, alignSelf: 'center'}]}>\n          <View><Text style={{color: '#666', fontSize: 24}}>welcome to mediaViewer</Text></View>\n          <View><Text style={{color: '#666', fontSize: 14, marginTop: 16}}>this app is dedicated to my son, Oscar</Text></View>\n          <View><Text style={{color: '#666', fontSize: 14}}>made as a reference for my portfolio</Text></View>\n          <View><Text style={{color: '#666', fontSize: 14}}>build with react native & typescript. works on web, android and ios</Text></View>\n          <View><Text style={{color: '#666', fontSize: 14, marginTop: 16}}>you can change resolution, theme and language in the footer</Text></View>\n          <View><Text style={{color: '#666', fontSize: 14}}>double click on images to show context menu actions</Text></View>\n          <View><Text style={{color: '#666', fontSize: 14}}>click 5 times on mediaViewer in footer to access settings</Text></View>\n          <View><Text style={{color: '#666', fontSize: 14}}>by sercan ;)</Text></View>\n        </View>}\n\n        {settingsCounter > 4 && <View style={[styles.footer, { bottom: 46 }]}>\n          <Button\n            onPress={(): void => setSettingsCounter(0)}\n            text=\"close\"\n            addStyles={styles.footerLink}\n          />\n\n          <Button\n            onPress={(): void => {\n              setData('tags', JSON.stringify([]))\n              setTags([])\n              setQuery('')\n            }}\n            text=\"clear tags\"\n            addStyles={{...styles.footerLink, borderLeftWidth: 1}}\n          />\n\n          <Button\n            onPress={(): void => {\n              setPictures([])\n              setData('pictures', JSON.stringify({}))\n            }}\n            text=\"clear cache\"\n            addStyles={{...styles.footerLink, borderLeftWidth: 1}}\n          />\n        </View>}\n\n        <View style={styles.footer}>\n          <Button\n            onPress={showSettings}\n            text=\"mediaViewer\"\n            addStyles={styles.footerLink}\n          />\n          <Button\n            onPress={(): void => updateSettings('language', language === 'en' ? 'tr' : 'en')}\n            text={language === 'en' ? 'english' : 'turkish'}\n            addStyles={{...styles.footerLink, borderLeftWidth: 1}}\n          />\n          <Button\n            onPress={(): void => updateSettings('resolution', resolution === 640 ? 1280 : 640)}\n            text={resolution === 640 ? '640p' : '1280p'}\n            addStyles={{...styles.footerLink, borderLeftWidth: 1}}\n          />\n          <Button\n            onPress={(): void => { updateSettings('theme', theme === 'dark' ? 'light' : 'dark') }}\n            text={theme === 'dark' ? 'dark' : 'light'}\n            addStyles={{...styles.footerLink, borderLeftWidth: 1}}\n          />\n        </View>\n      </View>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default App\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react'\nimport App from './src/App'\nimport * as Font from 'expo-font'\nimport { Platform } from 'react-native'\n\nif (Platform.OS === 'web') {\n  window.oncontextmenu = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    return false\n  }\n}\n\nconst AppContainer = () => {\n  const [isLoading, setIsLoading] = useState(true)\n\n  const loadAssetsAsync = async () => {\n    await Font.loadAsync({\n      'Ubuntu Mono': require('./assets/fonts/UbuntuMono-R.ttf'),\n    });\n\n    setIsLoading(false)\n  }\n\n  useEffect( () => {\n    loadAssetsAsync()\n  }, [])\n\n  return(\n    !isLoading && <App />\n  )\n}\n\nexport default AppContainer","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}