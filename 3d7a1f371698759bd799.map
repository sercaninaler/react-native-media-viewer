{"version":3,"sources":["/Users/sercan/Github/react-native-media-viewer/assets/fonts/UbuntuMono-R.ttf","/Users/sercan/Github/react-native-media-viewer/src/constants.ts","/Users/sercan/Github/react-native-media-viewer/src/helpers.ts","/Users/sercan/Github/react-native-media-viewer/src/styles.ts","/Users/sercan/Github/react-native-media-viewer/src/components.tsx","/Users/sercan/Github/react-native-media-viewer/src/App.tsx","/Users/sercan/Github/react-native-media-viewer/App.js","/Users/sercan/Github/react-native-media-viewer/web-build/register-service-worker.js"],"names":["module","exports","pixabayApi","query","PIXABAY_API_URL","TAGS","SETTINGS","theme","storage","localStorage","setData","key","value","a","async","setItem","getData","getItem","getStyles","styles","app","paddingTop","paddingBottom","height","backgroundColor","overflow","button","paddingLeft","paddingRight","borderRadius","borderColor","borderWidth","margin","justifyContent","buttonText","fontFamily","fontSize","searchForm","flexDirection","searchButtonView","marginLeft","marginTop","searchButton","padding","searchInput","width","color","tags","flexWrap","marginBottom","marginRight","maxWidth","message","alignSelf","loader","flex","alignItems","position","top","opacity","zIndex","footer","bottom","left","display","footerLink","pictureHolder","picture","pictureInfo","Button","props","useContext","ThemeContext","TouchableHighlight","style","addStyles","underlayColor","onPress","Text","text","React","createContext","App","then","result","JSON","stringify","useState","pictures","setPictures","setQuery","settingsCounter","setSettingsCounter","setMessage","isLoading","setIsLoading","limit","setLimit","settings","setSettings","setTags","Dimensions","get","useEffect","parse","insertTag","tag","indexOf","unshift","getPictures","keyword","trim","Array","isArray","length","Math","round","Date","getTime","axios","response","data","hits","newPictures","forEach","item","push","image","webformatURL","isDeleted","setTimeout","lastTap","handleDoubleTap","index","now","showInfo","handleToggleInfo","showSettings","filteredPictures","filter","slice","recommendedTags","split","Provider","View","TextInput","onChangeText","toLowerCase","onSubmitEditing","placeholder","selectTextOnFocus","map","ActivityIndicator","size","ScrollView","TouchableWithoutFeedback","source","uri","deletePicture","newSettings","updateSettings","borderLeftWidth","Platform","OS","window","oncontextmenu","event","preventDefault","stopPropagation","AppContainer","Font","require","navigator","addEventListener","serviceWorker","register","scope","info","catch","error","console"],"mappings":"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","file":"static/js/app.939cf84e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/UbuntuMono-R.ttf\";","import {\n  PIXABAY_API_URL,\n  PIXABAY_API_KEY,\n  FREESOUND_API_URL,\n  FREESOUND_API_KEY,\n} from '../config'\n\nexport const pixabayApi = (query: string): string => `${PIXABAY_API_URL}?key=${PIXABAY_API_KEY}\n&q=${query}&image_type=photo&safesearch=true&orientation=horizontal&per_page=100`\nexport const freesoundApi = (query: string): string => `${FREESOUND_API_URL}?query=${query}&token=${FREESOUND_API_KEY}\n&normalized=true&fields=previews,description&sort=downloads_desc&filter=duration:[1 TO 5]`\n\nexport const TAGS = ['animals', 'fruits', 'planets']\nexport const SETTINGS = { theme: 'light' }","import { Platform } from 'react-native'\n//import AsyncStorage from '@react-native-community/async-storage'\n\nconst storage = localStorage\n//const storage = Platform.OS === 'web' ? window.localstorage : AsyncStorage\n\nimport { TAGS, SETTINGS } from './constants'\n\nexport const setData = async (key: string, value: string): Promise<void> => {\n  try {\n    await storage.setItem(key, value)\n  } catch (e) {\n    // throw error\n  }\n}\n\nexport const getData = async (key: string): Promise<string | null | undefined> => {\n  try {\n    return await storage.getItem(key)\n  } catch(e) {\n    // throw error\n  }\n}\n\nexport const initLocalStorage = (): void => {\n  getData('pictures').then(result => {\n    if (result === null) {\n      setData('pictures', JSON.stringify({})).then()\n    }\n  })\n\n  getData('tags').then(result => {\n    if (result === null) {\n      setData('tags', JSON.stringify(TAGS)).then()\n    }\n  })\n\n  getData('settings').then(result => {\n    if (result === null) {\n      setData('settings', JSON.stringify(SETTINGS)).then()\n    }\n  })\n}\n","import {ViewStyle, ImageStyle, TextStyle} from 'react-native'\n\nexport const getStyles = (theme: string) => {\n\n  let styles = {\n    app: {\n      paddingTop: 30,\n      paddingBottom: 10,\n      height: '100%',\n      backgroundColor: '#FFF',\n      overflow: 'hidden',\n    } as ViewStyle,\n    button: {\n      backgroundColor: '#EEE',\n      paddingLeft: 8,\n      paddingRight: 8,\n      borderRadius: 4,\n      borderColor: '#DDD',\n      borderWidth: 1,\n      margin: 3,\n      justifyContent: 'center',\n      height: 26,\n    } as ViewStyle,\n    buttonText: {\n      fontFamily: 'Ubuntu Mono',\n      fontSize: 16,\n    } as TextStyle,\n    searchForm: {\n      justifyContent: 'center',\n      flexDirection: 'row',\n    } as ViewStyle,\n    searchButtonView: {\n      height: 40,\n      marginLeft: 12,\n      marginTop: 3,\n    },\n    searchButton: {\n      height: 48,\n      padding: 4,\n      fontSize: 18,\n      borderRadius: 7,\n    },\n    searchInput: {\n      fontSize: 18,\n      padding: 8,\n      paddingLeft: 10,\n      backgroundColor: '#f8f8f8',\n      borderColor: '#ddd',\n      borderWidth: 1,\n      borderRadius: 5,\n      width: 300,\n      height: 36,\n      fontFamily: 'Ubuntu Mono',\n      color: '#000',\n      //outline: 'none',\n    },\n    tags: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      marginTop: 15,\n      marginBottom: 25,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      maxWidth: 800,\n    } as ViewStyle,\n    message: {\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      marginTop: 25,\n      color: 'red',\n      fontSize: 16,\n      alignSelf: 'center',\n    } as ViewStyle,\n    loader: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      position: 'absolute',\n      top: 0,\n      width: '100%',\n      backgroundColor: '#FFF',\n      height: '100%',\n      opacity: 0.6,\n      zIndex: 1,\n      paddingBottom: 100,\n    } as ViewStyle,\n    footer: {\n      backgroundColor: '#ececec',\n      position: 'absolute',\n      width: '100%',\n      bottom: 0,\n      left: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n    } as ViewStyle,\n    footerLink: {\n      borderWidth: 0,\n      borderColor: '#CCC',\n      padding: 5,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRadius: 0,\n      margin: 0,\n    } as ViewStyle,\n    pictureHolder: {\n      flexDirection: 'column',\n      position: 'relative',\n      maxWidth: 640,\n      alignSelf: 'center',\n    } as ViewStyle,\n    picture: {\n      marginBottom: '10%',\n    } as ImageStyle,\n    pictureInfo: {\n      position: 'absolute',\n      bottom: '17%',\n      flexDirection: 'row',\n      alignSelf: 'center',\n    } as ViewStyle,\n  }\n\n  if (theme === 'dark') {\n    styles = {\n      ...styles,\n      app: {\n        ...styles.app,\n        backgroundColor: '#000'\n      },\n      loader: {\n        ...styles.loader,\n        backgroundColor: '#000',\n      },\n      searchInput: {\n        ...styles.searchInput,\n        backgroundColor: '#333',\n        borderColor: '#525252',\n        color: '#DDDDDD',\n      },\n      button: {\n        ...styles.button,\n        backgroundColor: '#333',\n        borderColor: '#525252',\n      },\n      buttonText: {\n        ...styles.buttonText,\n        color: '#aaaaaa',\n      },\n      footer: {\n        ...styles.footer,\n        backgroundColor: '#333',\n      },\n      footerLink: {\n        ...styles.footerLink,\n        borderColor: '#5a5a5a',\n      }\n    }\n  }\n\n  return styles\n}\n","import {Text, TouchableHighlight} from 'react-native'\nimport React, { FC, useContext } from 'react'\nimport { getStyles } from './styles'\nimport { ThemeContext } from './App'\nimport { ButtonType } from './types'\n\nexport const Button: FC<ButtonType> = (props: ButtonType) => {\n  const theme = useContext(ThemeContext)\n  const styles = getStyles(theme)\n\n  return (\n    <TouchableHighlight\n      style={{...styles.button, ...props.addStyles}}\n      underlayColor={theme === 'dark' ? '#555' : '#ccc'}\n      onPress={props.onPress}\n    >\n      <Text style={styles.buttonText}>{props.text}</Text>\n    </TouchableHighlight>\n  )\n}","import React, { FC, useState, useEffect } from 'react'\nimport {\n  View,\n  Text,\n  ScrollView,\n  TextInput,\n  TouchableHighlight,\n  TouchableWithoutFeedback,\n  ActivityIndicator,\n  Dimensions,\n} from 'react-native'\nimport axios from 'axios'\nimport { pixabayApi, SETTINGS } from './constants'\nimport { initLocalStorage, getData, setData } from './helpers'\nimport { Button } from './components'\nimport { ApiResults, PictureType, Settings } from './types'\nimport Image from 'react-native-scalable-image'\n\nimport { getStyles } from './styles'\n\nexport const ThemeContext = React.createContext('light');\n\nconst App: FC = () => {\n  initLocalStorage()\n\n  const [pictures, setPictures] = useState<PictureType[]>([])\n  /* const [sounds, setSounds] = useState([]) */\n  const [query, setQuery] = useState<string>('')\n  const [settingsCounter, setSettingsCounter] = useState<number>(0)\n  const [message, setMessage] = useState<string | null>(null)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [limit, setLimit] = useState<number>(10)\n  const [settings, setSettings] = useState<Settings>(SETTINGS)\n  const [tags, setTags] = useState<string[]>([])\n\n  const width = Dimensions.get('window').width\n  const theme = settings && settings.theme\n  const styles = getStyles(theme)\n\n  useEffect( () => {\n    getData('settings').then((settings) => {\n      if (settings) {\n        setSettings(JSON.parse(settings))\n      }\n    })\n    getData('tags').then((tags) => {\n      if (tags) {\n        setTags(JSON.parse(tags))\n      }\n    })\n    getData('pictures').then((pictures) => {\n      if (pictures) {\n        setPictures(JSON.parse(pictures))\n      }\n    })\n\n    /*\n    Dimensions.addEventListener(\"change\", (e) => {\n      console.log(e.window);\n    });\n    */\n  }, [])\n\n  const insertTag = (tag: string): void => {\n    if (tag !== '' && tags.indexOf(tag) === -1) {\n      tags.unshift(tag)\n      setTags(tags)\n      setData('tags', JSON.stringify(tags))\n    }\n  }\n\n  const getPictures = async (tag: string): Promise<void> => {\n    const keyword = tag.trim()\n    setMessage(null)\n    setLimit(10)\n    setIsLoading(true)\n\n    if ((!Array.isArray(pictures[keyword]) ||\n        !pictures[keyword].length) ||\n        Math.round(new Date().getTime() / 1000) - pictures[`${keyword}_lastUpdate`] > 12 * 60 * 60\n    ) {\n      const response = await axios.get(pixabayApi(keyword))\n      const data = response.data.hits\n\n      if (data.length) {\n        insertTag(keyword)\n\n        const newPictures: PictureType[] = []\n\n        data.forEach((item: ApiResults) => {\n          newPictures.push({\n            image: item.webformatURL,\n            tags: item.tags,\n            isDeleted: false,\n          })\n        })\n\n        pictures[keyword] = newPictures\n        pictures[`${keyword}_lastUpdate`] = Math.round(new Date().getTime() / 1000)\n        setData('pictures', JSON.stringify(pictures))\n        setPictures({...pictures})\n      } else {\n        setTimeout(() => {\n          setMessage('Couldn\\'t find any results ')\n        }, 500)\n      }\n    } else {\n      if (tags.indexOf(keyword) === -1) {\n        insertTag(keyword)\n      }\n    }\n\n    setTimeout(() => {\n      setIsLoading(false)\n    }, 100)\n  }\n\n  /* const getSounds = async (query) => {\n    const response = await axios.get(freesoundApi(query))\n    const sounds = response.data.results\n    // console.log(sounds)\n    setSounds(sounds)\n    playAudio(sounds[0].previews['preview-lq-mp3'])\n  } */\n\n  /* const playAudio = (fileName) => {\n    if (sound) {\n      sound.pause()\n    }\n    sound = new Audio(fileName)\n    sound.play()\n  } */\n\n  let lastTap: number | null = null;\n\n  const handleToggleInfo = (index: number): void => {\n    pictures[query][index].showInfo = !pictures[query][index].showInfo\n    setPictures({...pictures})\n  }\n\n  const handleDoubleTap = (index: number) => {\n    const now = Date.now();\n    if (lastTap && (now - lastTap) < 300) {\n      handleToggleInfo(index);\n    } else {\n      lastTap = now;\n    }\n  }\n\n  const deletePicture = (index: number): void => {\n    pictures[query][index].isDeleted = true\n    pictures[`${query}_lastUpdate`] = Math.round(new Date().getTime() / 1000)\n    setData('pictures', JSON.stringify(pictures))\n    setPictures({...pictures})\n  }\n\n  const onSubmit = (): void => {\n    getPictures(query)\n  }\n\n  /* const onChange = (event: React.SyntheticEvent): void => {\n    setQuery(event.target.value.toLowerCase())\n  }*/\n\n  const onChangeText = (text: string): void => {\n    setQuery(text.toLowerCase())\n  }\n\n  const showSettings = (): void => {\n    setSettingsCounter(settingsCounter + 1)\n  }\n\n  const updateSettings = (key: string, value: string): void => {\n    const newSettings = {\n      ...settings,\n      [key]: value,\n    }\n    setSettings(newSettings)\n    setData('settings', JSON.stringify(newSettings))\n  }\n\n  const renderPictureTags = (text: string): object => {\n    const pictureTags = text.split(',')\n\n    return pictureTags.map((tag) => (\n      <Button\n        onPress={(): void => {\n          setQuery(tag.trim())\n          getPictures(tag)\n        }}\n        text={tag}\n        key={tag}\n      />\n    ))\n  }\n\n  const filteredPictures = pictures[query] ? pictures[query].filter((picture: PictureType) => !picture.isDeleted).slice(0, limit) : []\n\n  const recommendedTags: string[] = []\n\n  filteredPictures.forEach((picture: PictureType) => {\n    if (picture.tags) {\n      const tags = picture.tags.split(',')\n      tags.forEach((tag) => {\n        tag = tag.trim()\n        if (recommendedTags.indexOf(tag) === -1) {\n          recommendedTags.push(tag)\n        }\n      })\n    }\n  })\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <View style={styles.app}>\n        <View style={styles.searchForm}>\n          <TextInput\n            style={styles.searchInput}\n            value={query}\n            onChangeText={(text: string): void => onChangeText(text)}\n            onSubmitEditing={onSubmit}\n            placeholder=\"cats, planets, fruits,...\"\n            selectTextOnFocus\n          />\n        </View>\n        <View style={styles.tags}>\n          {tags.map((tag) => (\n            <Button\n              key={tag}\n              text={tag}\n              onPress={() => {\n                setQuery(tag)\n                getPictures(tag)\n              }}\n            />\n          ))}\n        </View>\n\n        {message && <Text style={styles.message}>{message}</Text>}\n\n        {isLoading && (\n          <View style={styles.loader}>\n            <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n          </View>\n        )}\n\n        {!isLoading && filteredPictures.length !== 0 && (\n        <ScrollView style={styles.pictureHolder}>\n          {filteredPictures.map((picture: PictureType, index: number) => (\n            <TouchableWithoutFeedback\n              key={picture.image}\n              //onLongPress={(): void => handleToggleInfo(index)}\n              onPress={(): void => handleDoubleTap(index)}\n            >\n              <View style={styles.pictureHolder} >\n                <Image\n                  style={styles.picture}\n                  source={{uri: picture.image}}\n                  width={width > 640 ? 640 : width}\n                />\n\n                {picture.showInfo && (\n                  <View style={styles.pictureInfo}>\n                    <TouchableHighlight\n                      underlayColor=\"#cccccc\"\n                      style={{...styles.button, marginLeft: 2, marginRight: 2}}\n                      onPress={(): void => deletePicture(index) }\n                    >\n                      <Text>x</Text>\n                    </TouchableHighlight>\n\n                    {renderPictureTags(picture.tags)}\n                  </View>\n                )}\n              </View>\n            </TouchableWithoutFeedback>\n          ))}\n\n          <Button\n            onPress={(): void => setLimit(limit + 10) }\n            text=\"load more\"\n            addStyles={{marginBottom: '13%', alignSelf: 'center'}}\n          />\n\n          <View style={styles.tags}>\n            {recommendedTags.map((tag) => (\n              <Button\n                key={tag}\n                text={tag}\n                onPress={() => {\n                  setQuery(tag)\n                  getPictures(tag)\n                }}\n              />\n            ))}\n          </View>\n        </ScrollView>\n        )}\n\n        <View style={styles.footer}>\n          {settingsCounter < 4 && (\n            <>\n              <Button\n                onPress={(): void => { showSettings() }}\n                text=\"media viewer\"\n                addStyles={styles.footerLink}\n              />\n              <Button\n                onPress={(): void => { updateSettings('theme', theme === 'dark' ? 'light' : 'dark') }}\n                text={theme === 'dark' ? 'light mode' : 'dark mode'}\n                addStyles={{...styles.footerLink, borderLeftWidth: 1}}\n              />\n            </>\n          )}\n          {settingsCounter > 20 && <Button\n            onPress={(): void => showSettings()}\n            text=\"language: english\"\n            addStyles={styles.footerLink}\n          />}\n\n          {settingsCounter === 4 && <Button\n            onPress={(): void => showSettings()}\n            text=\"settings\"\n            addStyles={styles.footerLink}\n            />}\n\n          {settingsCounter > 4 && <Button\n            onPress={(): void => setSettingsCounter(0)}\n            text=\"back\"\n            addStyles={styles.footerLink}\n          />}\n\n          {settingsCounter > 4 && <Button\n            onPress={(): void => {\n              setData('tags', JSON.stringify([]))\n              setTags([])\n              setQuery('')\n            }}\n            text=\"clear tags\"\n            addStyles={{...styles.footerLink, borderLeftWidth: 1}}\n          />}\n\n          {settingsCounter > 4 && <Button\n            onPress={(): void => {\n              setPictures([])\n              setData('pictures', JSON.stringify({}))\n            }}\n            text=\"clear cache\"\n            addStyles={{...styles.footerLink, borderLeftWidth: 1}}\n          />}\n        </View>\n      </View>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default App\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react'\nimport App from './src/App'\nimport * as Font from 'expo-font'\nimport { Platform } from 'react-native'\n\nif (Platform.OS === 'web') {\n  window.oncontextmenu = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    return false\n  }\n}\n\nconst AppContainer = () => {\n  const [isLoading, setIsLoading] = useState(true)\n\n  const loadAssetsAsync = async () => {\n    await Font.loadAsync({\n      'Ubuntu Mono': require('./assets/fonts/UbuntuMono-R.ttf'),\n    });\n\n    setIsLoading(false)\n  }\n\n  useEffect( () => {\n    loadAssetsAsync()\n  }, [])\n\n  return(\n    !isLoading && <App />\n  )\n}\n\nexport default AppContainer","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}