{"version":3,"sources":["/Users/sercan/Github/react-native-media-viewer/assets/fonts/UbuntuMono-R.ttf","/Users/sercan/Github/react-native-media-viewer/src/constants.ts","/Users/sercan/Github/react-native-media-viewer/src/helpers.ts","/Users/sercan/Github/react-native-media-viewer/src/styles.ts","/Users/sercan/Github/react-native-media-viewer/src/components.tsx","/Users/sercan/Github/react-native-media-viewer/src/App.tsx","/Users/sercan/Github/react-native-media-viewer/App.js","/Users/sercan/Github/react-native-media-viewer/web-build/register-service-worker.js"],"names":["module","exports","pixabayApi","query","PIXABAY_API_URL","TAGS","SETTINGS","theme","storage","Platform","OS","localStorage","AsyncStorage","setData","key","value","a","async","setItem","getData","getItem","getStyles","styles","app","paddingTop","paddingBottom","height","backgroundColor","overflow","button","padding","paddingLeft","paddingRight","borderRadius","borderColor","borderWidth","margin","buttonText","fontFamily","fontSize","searchForm","justifyContent","flexDirection","searchButtonView","marginLeft","marginTop","searchButton","searchInput","width","tags","flexWrap","marginBottom","marginRight","maxWidth","message","color","alignSelf","loader","flex","alignItems","position","top","opacity","zIndex","footer","bottom","left","display","footerLink","pictureHolder","picture","pictureInfo","Button","props","TouchableHighlight","style","addStyles","underlayColor","onPress","Text","text","App","then","result","JSON","stringify","useState","pictures","setPictures","setQuery","settingsCounter","setSettingsCounter","setMessage","isLoading","setIsLoading","limit","setLimit","settings","setSettings","setTags","Dimensions","get","useEffect","parse","getPictures","tag","keyword","trim","Array","isArray","length","Math","round","Date","getTime","axios","response","data","hits","insertTag","newPictures","forEach","item","push","image","webformatURL","isDeleted","setTimeout","indexOf","unshift","lastTap","handleToggleInfo","index","showInfo","showSettings","filteredPictures","filter","slice","View","TextInput","onChangeText","toLowerCase","onSubmitEditing","placeholder","selectTextOnFocus","map","ActivityIndicator","size","ScrollView","TouchableWithoutFeedback","onLongPress","now","handleDoubleTap","source","uri","deletePicture","split","newSettings","updateSettings","borderLeftWidth","window","oncontextmenu","event","preventDefault","stopPropagation","AppContainer","Font","require","navigator","addEventListener","serviceWorker","register","scope","info","catch","error","console"],"mappings":"6EAAAA,EAAOC,QAAU,IAA0B,4B,sLCO9BC,EAAa,SAACC,GAAD,MAA8BC,uEACnDD,EADqB,yEAKbE,EAAO,CAAC,UAAW,SAAU,WAC7BC,EAAW,CAAEC,MAAO,S,gBCV3BC,EAA0B,QAAhBC,IAASC,GAAeC,aAAeC,IAE1CC,EAAU,SAAOC,EAAaC,GAApB,SAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEbR,EAAQU,QAAQJ,EAAKC,IAFR,8GAQVI,EAAU,SAAOL,GAAP,SAAAE,EAAAC,OAAA,2EAAAD,EAAA,MAENR,EAAQY,QAAQN,IAFV,gI,ijBCVhB,IAAMO,EAAY,SAACd,GAExB,IAAIe,EAAS,CACXC,IAAK,CACHC,WAAY,GACZC,cAAe,GACfC,OAAQ,OACRC,gBAAiB,OACjBC,SAAU,UAEZC,OAAQ,CACNF,gBAAiB,OACjBG,QAAS,EACTC,YAAa,EACbC,aAAc,EACdC,aAAc,EACdC,YAAa,OACbC,YAAa,EACbC,OAAQ,GAEVC,WAAY,CACVC,WAAY,cACZC,SAAU,IAEZC,WAAY,CACVC,eAAgB,SAChBC,cAAe,OAEjBC,iBAAkB,CAChBjB,OAAQ,GACRkB,WAAY,GACZC,UAAW,GAEbC,aAAc,CACZpB,OAAQ,GACRI,QAAS,EACTS,SAAU,GACVN,aAAc,GAEhBc,YAAa,CACXR,SAAU,GACVT,QAAS,EACTC,YAAa,GACbJ,gBAAiB,UACjBO,YAAa,OACbC,YAAa,EACbF,aAAc,EACde,MAAO,IACPtB,OAAQ,GACRY,WAAY,eAGdW,KAAM,CACJP,cAAe,MACfQ,SAAU,OACVT,eAAgB,SAChBI,UAAW,GACXM,aAAc,GACdP,WAAY,OACZQ,YAAa,OACbC,SAAU,KAEZC,QAAS,CACPJ,SAAU,OACVT,eAAgB,SAChBI,UAAW,GACXU,MAAO,MACPhB,SAAU,GACViB,UAAW,UAEbC,OAAQ,CACNC,KAAM,EACNhB,cAAe,MACfD,eAAgB,eAChBkB,WAAY,SACZC,SAAU,WACVC,IAAK,EACLb,MAAO,OACPrB,gBAAiB,OACjBD,OAAQ,OACRoC,QAAS,GACTC,OAAQ,EACRtC,cAAe,KAEjBuC,OAAQ,CACNrC,gBAAiB,UACjBiC,SAAU,WACVZ,MAAO,OACPiB,OAAQ,EACRC,KAAM,EACNC,QAAS,OACT1B,eAAgB,SAChBC,cAAe,MACfQ,SAAU,QAEZkB,WAAY,CACVjC,YAAa,EACbD,YAAa,OACbJ,QAAS,EACTC,YAAa,GACbC,aAAc,GACdC,aAAc,EACdG,OAAQ,GAEViC,cAAe,CACb3B,cAAe,SACfkB,SAAU,WACVP,SAAU,IACVG,UAAW,UAEbc,QAAS,CACPnB,aAAc,OAEhBoB,YAAa,CACXX,SAAU,WACVK,OAAQ,MACRvB,cAAe,MACfc,UAAW,WA+Bf,MA3Bc,SAAVjD,IACFe,EAAM,KACDA,EADC,CAEJC,IAAI,EAAD,GACED,EAAOC,IADT,CAEDI,gBAAiB,SAEnB8B,OAAO,EAAD,GACDnC,EAAOmC,OADN,CAEJ9B,gBAAiB,SAEnBE,OAAO,EAAD,GACDP,EAAOO,OADN,CAEJF,gBAAiB,OACjBO,YAAa,YAEfG,WAAW,EAAD,GACLf,EAAOe,WADF,CAERkB,MAAO,YAETS,OAAO,EAAD,GACD1C,EAAO0C,OADN,CAEJrC,gBAAiB,YAKhBL,G,ijBCnJF,IAAMkD,EAAa,SAACC,GAEzB,IAAInD,EAASD,EAAUoD,EAAMlE,OAE7B,OACE,kBAACmE,EAAA,EAAD,CACEC,MAAK,KAAMrD,EAAOO,OAAb,GAAwB4C,EAAMG,WACnCC,cAA+B,SAAhBJ,EAAMlE,MAAmB,OAAS,OACjDuE,QAASL,EAAMK,SAEf,kBAACC,EAAA,EAAD,CAAMJ,MAAOrD,EAAOe,YAAaoC,EAAMO,Q,yjBCO7C,IA2SeC,EA3SC,WHCd9D,EAAQ,YAAY+D,MAAK,SAAAC,GACR,OAAXA,GACFtE,EAAQ,WAAYuE,KAAKC,UAAU,KAAKH,UAI5C/D,EAAQ,QAAQ+D,MAAK,SAAAC,GACJ,OAAXA,GACFtE,EAAQ,OAAQuE,KAAKC,UAAUhF,IAAO6E,UAI1C/D,EAAQ,YAAY+D,MAAK,SAAAC,GACR,OAAXA,GACFtE,EAAQ,WAAYuE,KAAKC,UAAU/E,IAAW4E,UGf9B,MAGYI,mBAAqB,IAHjC,WAGbC,EAHa,KAGHC,EAHG,OAKMF,mBAAiB,IALvB,WAKbnF,EALa,KAKNsF,EALM,OAM0BH,mBAAiB,GAN3C,WAMbI,EANa,KAMIC,EANJ,OAOUL,mBAAwB,MAPlC,WAObhC,EAPa,KAOJsC,EAPI,OAQcN,oBAAkB,GARhC,WAQbO,EARa,KAQFC,EARE,OASMR,mBAAiB,IATvB,WASbS,EATa,KASNC,EATM,OAUYV,mBAAmBhF,GAV/B,WAUb2F,EAVa,KAUHC,EAVG,OAWIZ,mBAAmB,IAXvB,WAWbrC,EAXa,KAWPkD,GAXO,KAadnD,GAAQoD,IAAWC,IAAI,UAAUrD,MACjCzC,GAAQ0F,GAAYA,EAAS1F,MAC7Be,GAASD,EAAUd,IAEzB+F,qBAAW,WACTnF,EAAQ,YAAY+D,MAAK,SAACe,GACxBC,EAAYd,KAAKmB,MAAMN,OAEzB9E,EAAQ,QAAQ+D,MAAK,SAACjC,GACpBkD,GAAQf,KAAKmB,MAAMtD,OAErB9B,EAAQ,YAAY+D,MAAK,SAACK,GACxBC,EAAYJ,KAAKmB,MAAMhB,SAQxB,IAEH,IAAMiB,GAAc,SAAOC,GAAP,qBAAAzF,EAAAC,OAAA,mDACZyF,EAAUD,EAAIE,OACpBf,EAAW,MACXI,EAAS,IACTF,GAAa,GAEPc,MAAMC,QAAQtB,EAASmB,KACxBnB,EAASmB,GAASI,UACnBC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAAQ3B,EAAYmB,EAAJ,eAA4B,OARhE,mCAAA1F,EAAA,MAUOmG,IAAMd,IAAInG,EAAWwG,KAV5B,OAUVU,EAVU,QAWVC,EAAOD,EAASC,KAAKC,MAElBR,QACPS,GAAUb,GAEJc,EAA0B,GAEhCH,EAAKI,SAAQ,SAACC,GACZF,EAAYG,KAAK,CACfC,MAAOF,EAAKG,aACZ5E,KAAMyE,EAAKzE,KACX6E,WAAW,OAIfvC,EAASmB,GAAWc,EACpBjC,EAAYmB,EAAJ,eAA4BK,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KACtErG,EAAQ,WAAYuE,KAAKC,UAAUE,IACnCC,EAAY,KAAID,KAEhBwC,YAAW,WACTnC,EAAW,gCACV,KAjCW,yBAoCe,IAA3B3C,EAAK+E,QAAQtB,IACfa,GAAUb,GArCI,QAyClBqB,YAAW,WACTjC,GAAa,KACZ,KA3Ce,uCA8CdyB,GAAY,SAACd,GACL,KAARA,IAAqC,IAAvBxD,EAAK+E,QAAQvB,KAC7BxD,EAAKgF,QAAQxB,GACbN,GAAQlD,GACRpC,EAAQ,OAAQuE,KAAKC,UAAUpC,MAoB/BiF,GAAU,KAERC,GAAmB,SAACC,GACxB7C,EAASpF,GAAOiI,GAAOC,UAAY9C,EAASpF,GAAOiI,GAAOC,SAC1D7C,EAAY,KAAID,KA+BZ+C,GAAe,WACnB3C,EAAmBD,EAAkB,IA0BjC6C,GAAmBhD,EAASpF,GAASoF,EAASpF,GAAOqI,QAAO,SAAAlE,GAAO,OAAKA,EAAQwD,aAAWW,MAAM,EAAG1C,GAAS,GAEnH,OACE,kBAAC2C,EAAA,EAAD,CAAM/D,MAAOrD,GAAOC,KAClB,kBAACmH,EAAA,EAAD,CAAM/D,MAAOrD,GAAOkB,YAClB,kBAACmG,EAAA,EAAD,CACEhE,MAAOrD,GAAOyB,YACdhC,MAAOZ,EACPyI,aAAc,SAAC5D,GAAD,OAvCD,SAACA,GACpBS,EAAST,EAAK6D,eAsC8BD,CAAa5D,IACnD8D,gBAhDS,WACftC,GAAYrG,IAgDN4I,YAAY,4BACZC,mBAAiB,KAGrB,kBAACN,EAAA,EAAD,CAAM/D,MAAOrD,GAAO2B,MACjBA,EAAKgG,KAAI,SAACxC,GAAD,OACR,kBAAC,EAAD,CACElG,MAAOA,GACPO,IAAK2F,EACLzB,KAAMyB,EACN3B,QAAS,WACPW,EAASgB,GACTD,GAAYC,UAMnBnD,GAAW,kBAACyB,EAAA,EAAD,CAAMJ,MAAOrD,GAAOgC,SAAUA,GAEzCuC,GACC,kBAAC6C,EAAA,EAAD,CAAM/D,MAAOrD,GAAOmC,QAClB,kBAACyF,EAAA,EAAD,CAAmBC,KAAK,QAAQ5F,MAAM,cAIxCsC,GAAyC,IAA5B0C,GAAiBzB,QAChC,kBAACsC,EAAA,EAAD,CAAYzE,MAAOrD,GAAO+C,eACvBkE,GAAiBU,KAAI,SAAC3E,EAAS8D,GAAV,OACpB,kBAACiB,EAAA,EAAD,CACEvI,IAAKwD,EAAQsD,MACb0B,YAAa,kBAAYnB,GAAiBC,IAC1CtD,QAAS,kBAjGK,SAACsD,GACvB,IAAMmB,EAAMtC,KAAKsC,MACbrB,IAAYqB,EAAMrB,GAAW,IAC/BC,GAAiBC,GAEjBF,GAAUqB,EA4FiBC,CAAgBpB,KAErC,kBAACM,EAAA,EAAD,CAAM/D,MAAOrD,GAAO+C,eAClB,kBAAC,IAAD,CACEM,MAAOrD,GAAOgD,QACdmF,OAAQ,CAACC,IAAKpF,EAAQsD,OACtB5E,MAAOA,GAAQ,IAAM,IAAMA,KAG5BsB,EAAQ+D,UACP,kBAACK,EAAA,EAAD,CAAM/D,MAAOrD,GAAOiD,aAClB,kBAACG,EAAA,EAAD,CACEG,cAAc,UACdF,MAAK,KAAMrD,GAAOO,OAAb,CAAqBe,WAAY,EAAGQ,YAAa,IACtD0B,QAAS,kBAtGL,SAACsD,GACrB7C,EAASpF,GAAOiI,GAAON,WAAY,EACnCvC,EAAYpF,EAAJ,eAA0B4G,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KACpErG,EAAQ,WAAYuE,KAAKC,UAAUE,IACnCC,EAAY,KAAID,IAkGqBoE,CAAcvB,KAEnC,kBAACrD,EAAA,EAAD,WAGiBT,EAAQrB,KA1EhB2G,MAAM,KACZX,KAAI,SAACxC,GAAD,OACrB,kBAAC,EAAD,CACE3B,QAAS,WACPW,EAASgB,EAAIE,QACbH,GAAYC,IAEdzB,KAAMyB,EACN3F,IAAK2F,aAyEL,kBAAC,EAAD,CACE3B,QAAS,kBAAYkB,EAASD,EAAQ,KACtCf,KAAK,YACLJ,UAAW,CAACzB,aAAc,MAAOK,UAAW,aAKhD,kBAACkF,EAAA,EAAD,CAAM/D,MAAOrD,GAAO0C,QACjB0B,EAAkB,GACjB,oCACE,kBAAC,EAAD,CACEZ,QAAS,WAAcwD,MACvBtD,KAAK,eACLJ,UAAWtD,GAAO8C,aAEpB,kBAAC,EAAD,CACEU,QAAS,YA5GE,SAAChE,EAAaC,GACnC,IAAM8I,EAAW,KACZ5D,EADY,OAEdnF,EAAMC,IAETmF,EAAY2D,GACZhJ,EAAQ,WAAYuE,KAAKC,UAAUwE,IAsGFC,CAAe,QAAmB,SAAVvJ,GAAmB,QAAU,SAC5EyE,KAAgB,SAAVzE,GAAmB,aAAe,YACxCqE,UAAS,KAAMtD,GAAO8C,WAAb,CAAyB2F,gBAAiB,OAIxDrE,EAAkB,IAAM,kBAAC,EAAD,CACvBZ,QAAS,kBAAYwD,MACrBtD,KAAK,oBACLJ,UAAWtD,GAAO8C,aAGC,IAApBsB,GAAyB,kBAAC,EAAD,CACxBZ,QAAS,kBAAYwD,MACrBtD,KAAK,WACLJ,UAAWtD,GAAO8C,aAGnBsB,EAAkB,GAAK,kBAAC,EAAD,CACtBZ,QAAS,kBAAYa,EAAmB,IACxCX,KAAK,OACLJ,UAAWtD,GAAO8C,aAGnBsB,EAAkB,GAAK,kBAAC,EAAD,CACtBZ,QAAS,WACPjE,EAAQ,OAAQuE,KAAKC,UAAU,KAC/Bc,GAAQ,IACRV,EAAS,KAEXT,KAAK,aACLJ,UAAS,KAAMtD,GAAO8C,WAAb,CAAyB2F,gBAAiB,MAGpDrE,EAAkB,GAAK,kBAAC,EAAD,CACtBZ,QAAS,WACPU,EAAY,IACZ3E,EAAQ,WAAYuE,KAAKC,UAAU,MAErCL,KAAK,cACLJ,UAAS,KAAMtD,GAAO8C,WAAb,CAAyB2F,gBAAiB,S,QCnTzC,QAAhBtJ,IAASC,KACXsJ,OAAOC,cAAgB,SAACC,GAGtB,OAFAA,EAAMC,iBACND,EAAME,mBACC,IAwBIC,IApBM,WAAO,IAAD,EACS/E,oBAAS,GADlB,WAClBO,EADkB,KACPC,EADO,KAezB,OAJAQ,qBAAW,WARa,EAAAtF,EAAAC,OAAA,kEAAAD,EAAA,MAChBsJ,IAAe,CACnB,cAAeC,EAAQ,QAFH,OAKtBzE,GAAa,GALS,uCAUrB,KAGAD,GAAa,kBAAC,EAAD,Q,4DC5Bd,kBAAmB2E,WACrBR,OAAOS,iBAAiB,QAAQ,WAC9BD,UAAUE,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7C1F,MAAK,SAAS2F,OAGdC,OAAM,SAASC,GACdC,QAAQH,KAAK,oCAAqCE,W","file":"static/js/app.e48ea412.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/UbuntuMono-R.ttf\";","import {\n  PIXABAY_API_URL,\n  PIXABAY_API_KEY,\n  FREESOUND_API_URL,\n  FREESOUND_API_KEY,\n} from '../config'\n\nexport const pixabayApi = (query: string): string => `${PIXABAY_API_URL}?key=${PIXABAY_API_KEY}\n&q=${query}&image_type=photo&safesearch=true&orientation=horizontal&per_page=100`\nexport const freesoundApi = (query: string): string => `${FREESOUND_API_URL}?query=${query}&token=${FREESOUND_API_KEY}\n&normalized=true&fields=previews,description&sort=downloads_desc&filter=duration:[1 TO 5]`\n\nexport const TAGS = ['animals', 'fruits', 'planets']\nexport const SETTINGS = { theme: 'light' }","import { AsyncStorage, Platform } from 'react-native'\nimport { TAGS, SETTINGS } from './constants'\n\nconst storage = Platform.OS === 'web' ? localStorage : AsyncStorage\n\nexport const setData = async (key: string, value: string): Promise<void> => {\n  try {\n    await storage.setItem(key, value)\n  } catch (e) {\n    // throw error\n  }\n}\n\nexport const getData = async (key: string): Promise<void> => {\n  try {\n    return await storage.getItem(key)\n  } catch(e) {\n    // throw error\n  }\n}\n\nexport const initLocalStorage = (): void => {\n  getData('pictures').then(result => {\n    if (result === null) {\n      setData('pictures', JSON.stringify({})).then()\n    }\n  })\n\n  getData('tags').then(result => {\n    if (result === null) {\n      setData('tags', JSON.stringify(TAGS)).then()\n    }\n  })\n\n  getData('settings').then(result => {\n    if (result === null) {\n      setData('settings', JSON.stringify(SETTINGS)).then()\n    }\n  })\n}\n","import {ViewStyle, ImageStyle, TextStyle} from 'react-native'\n\n\nexport const getStyles = (theme) => {\n\n  let styles = {\n    app: {\n      paddingTop: 30,\n      paddingBottom: 10,\n      height: '100%',\n      backgroundColor: '#FFF',\n      overflow: 'hidden',\n    } as ViewStyle,\n    button: {\n      backgroundColor: '#EEE',\n      padding: 3,\n      paddingLeft: 7,\n      paddingRight: 7,\n      borderRadius: 4,\n      borderColor: '#DDD',\n      borderWidth: 1,\n      margin: 3,\n    } as ViewStyle,\n    buttonText: {\n      fontFamily: 'Ubuntu Mono',\n      fontSize: 16,\n    } as TextStyle,\n    searchForm: {\n      justifyContent: 'center',\n      flexDirection: 'row',\n    } as ViewStyle,\n    searchButtonView: {\n      height: 40,\n      marginLeft: 12,\n      marginTop: 3,\n    },\n    searchButton: {\n      height: 48,\n      padding: 4,\n      fontSize: 18,\n      borderRadius: 7,\n    },\n    searchInput: {\n      fontSize: 18,\n      padding: 8,\n      paddingLeft: 10,\n      backgroundColor: '#f8f8f8',\n      borderColor: '#ddd',\n      borderWidth: 1,\n      borderRadius: 5,\n      width: 300,\n      height: 36,\n      fontFamily: 'Ubuntu Mono',\n      //outline: 'none',\n    },\n    tags: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      marginTop: 15,\n      marginBottom: 25,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      maxWidth: 800,\n    } as ViewStyle,\n    message: {\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      marginTop: 25,\n      color: 'red',\n      fontSize: 16,\n      alignSelf: 'center',\n    } as ViewStyle,\n    loader: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      position: 'absolute',\n      top: 0,\n      width: '100%',\n      backgroundColor: '#FFF',\n      height: '100%',\n      opacity: 0.6,\n      zIndex: 1,\n      paddingBottom: 100,\n    } as ViewStyle,\n    footer: {\n      backgroundColor: '#ececec',\n      position: 'absolute',\n      width: '100%',\n      bottom: 0,\n      left: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n    } as ViewStyle,\n    footerLink: {\n      borderWidth: 0,\n      borderColor: '#ddd',\n      padding: 5,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRadius: 0,\n      margin: 0,\n    } as ViewStyle,\n    pictureHolder: {\n      flexDirection: 'column',\n      position: 'relative',\n      maxWidth: 640,\n      alignSelf: 'center',\n    } as ViewStyle,\n    picture: {\n      marginBottom: '10%',\n    } as ImageStyle,\n    pictureInfo: {\n      position: 'absolute',\n      bottom: '17%',\n      flexDirection: 'row',\n      alignSelf: 'center',\n    } as ViewStyle,\n  }\n\n  if (theme === 'dark') {\n    styles = {\n      ...styles,\n      app: {\n        ...styles.app,\n        backgroundColor: '#000'\n      },\n      loader: {\n        ...styles.loader,\n        backgroundColor: '#000',\n      },\n      button: {\n        ...styles.button,\n        backgroundColor: '#333',\n        borderColor: '#525252',\n      },\n      buttonText: {\n        ...styles.buttonText,\n        color: '#aaaaaa',\n      },\n      footer: {\n        ...styles.footer,\n        backgroundColor: '#333',\n      }\n    }\n  }\n\n  return styles\n}\n","import {Text, TouchableHighlight} from 'react-native'\nimport React, { FC } from 'react'\nimport { getStyles } from './styles'\n\nexport const Button: FC = (props) => {\n\n  let styles = getStyles(props.theme)\n\n  return (\n    <TouchableHighlight\n      style={{...styles.button, ...props.addStyles}}\n      underlayColor={props.theme === 'dark' ? '#555' : '#ccc'}\n      onPress={props.onPress}\n    >\n      <Text style={styles.buttonText}>{props.text}</Text>\n    </TouchableHighlight>\n  )\n}","import React, { FC, useState, useEffect } from 'react'\nimport {\n  View,\n  Text,\n  ScrollView,\n  TextInput,\n  TouchableHighlight,\n  TouchableWithoutFeedback,\n  ActivityIndicator,\n  Dimensions,\n} from 'react-native'\n//import Constants from 'expo-constants';\nimport axios from 'axios'\nimport { pixabayApi, SETTINGS } from './constants'\nimport { initLocalStorage, getData, setData } from './helpers'\nimport { Button } from './components'\nimport { ApiResults, Pictures, Settings } from './types'\nimport Image from 'react-native-scalable-image'\n\nimport { getStyles } from './styles'\n\nconst App: FC = () => {\n  initLocalStorage()\n\n  const [pictures, setPictures] = useState<Pictures[]>([])\n  /* const [sounds, setSounds] = useState([]) */\n  const [query, setQuery] = useState<string>('')\n  const [settingsCounter, setSettingsCounter] = useState<number>(0)\n  const [message, setMessage] = useState<string | null>(null)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [limit, setLimit] = useState<number>(10)\n  const [settings, setSettings] = useState<Settings>(SETTINGS)\n  const [tags, setTags] = useState<string[]>([])\n\n  const width = Dimensions.get('window').width\n  const theme = settings && settings.theme\n  const styles = getStyles(theme)\n\n  useEffect( () => {\n    getData('settings').then((settings) => {\n      setSettings(JSON.parse(settings))\n    })\n    getData('tags').then((tags) => {\n      setTags(JSON.parse(tags))\n    })\n    getData('pictures').then((pictures) => {\n      setPictures(JSON.parse(pictures))\n    })\n\n    /*\n    Dimensions.addEventListener(\"change\", (e) => {\n      console.log(e.window);\n    });\n    */\n  }, [])\n\n  const getPictures = async (tag: string): Promise<void> => {\n    const keyword = tag.trim()\n    setMessage(null)\n    setLimit(10)\n    setIsLoading(true)\n\n    if ((!Array.isArray(pictures[keyword]) ||\n        !pictures[keyword].length) ||\n        Math.round(new Date().getTime() / 1000) - pictures[`${keyword}_lastUpdate`] > 12 * 60 * 60\n    ) {\n      const response = await axios.get(pixabayApi(keyword))\n      const data = response.data.hits\n\n      if (data.length) {\n        insertTag(keyword)\n\n        const newPictures: Pictures[] = []\n\n        data.forEach((item: ApiResults) => {\n          newPictures.push({\n            image: item.webformatURL,\n            tags: item.tags,\n            isDeleted: false,\n          })\n        })\n\n        pictures[keyword] = newPictures\n        pictures[`${keyword}_lastUpdate`] = Math.round(new Date().getTime() / 1000)\n        setData('pictures', JSON.stringify(pictures))\n        setPictures({...pictures})\n      } else {\n        setTimeout(() => {\n          setMessage('Couldn\\'t find any results ')\n        }, 500)\n      }\n    } else {\n      if (tags.indexOf(keyword) === -1) {\n        insertTag(keyword)\n      }\n    }\n\n    setTimeout(() => {\n      setIsLoading(false)\n    }, 100)\n  }\n\n  const insertTag = (tag: string): void => {\n    if (tag !== '' && tags.indexOf(tag) === -1) {\n      tags.unshift(tag)\n      setTags(tags)\n      setData('tags', JSON.stringify(tags))\n    }\n  }\n\n  /* const getSounds = async (query) => {\n    const response = await axios.get(freesoundApi(query))\n    const sounds = response.data.results\n    // console.log(sounds)\n    setSounds(sounds)\n    playAudio(sounds[0].previews['preview-lq-mp3'])\n  } */\n\n  /* const playAudio = (fileName) => {\n    if (sound) {\n      sound.pause()\n    }\n    sound = new Audio(fileName)\n    sound.play()\n  } */\n\n  let lastTap = null;\n\n  const handleToggleInfo = (index: number): void => {\n    pictures[query][index].showInfo = !pictures[query][index].showInfo\n    setPictures({...pictures})\n  }\n\n  const handleDoubleTap = (index: number) => {\n    const now = Date.now();\n    if (lastTap && (now - lastTap) < 300) {\n      handleToggleInfo(index);\n    } else {\n      lastTap = now;\n    }\n  }\n\n  const deletePicture = (index: number): void => {\n    pictures[query][index].isDeleted = true\n    pictures[`${query}_lastUpdate`] = Math.round(new Date().getTime() / 1000)\n    setData('pictures', JSON.stringify(pictures))\n    setPictures({...pictures})\n  }\n\n  const onSubmit = (): void => {\n    getPictures(query)\n  }\n\n  /* const onChange = (event: React.SyntheticEvent): void => {\n    setQuery(event.target.value.toLowerCase())\n  }*/\n\n  const onChangeText = (text: string): void => {\n    setQuery(text.toLowerCase())\n  }\n\n  const showSettings = (): void => {\n    setSettingsCounter(settingsCounter + 1)\n  }\n\n  const updateSettings = (key: string, value: string): void => {\n    const newSettings = {\n      ...settings,\n      [key]: value,\n    }\n    setSettings(newSettings)\n    setData('settings', JSON.stringify(newSettings))\n  }\n\n  const renderPictureTags = (text: string): object => {\n    const pictureTags = text.split(',')\n    return pictureTags.map((tag) => (\n      <Button\n        onPress={(): void => {\n          setQuery(tag.trim())\n          getPictures(tag)\n        }}\n        text={tag}\n        key={tag}\n      />\n    ))\n  }\n\n  const filteredPictures = pictures[query] ? pictures[query].filter(picture => !picture.isDeleted).slice(0, limit) : []\n\n  return (\n    <View style={styles.app}>\n      <View style={styles.searchForm}>\n        <TextInput\n          style={styles.searchInput}\n          value={query}\n          onChangeText={(text: string): void => onChangeText(text)}\n          onSubmitEditing={onSubmit}\n          placeholder=\"cats, planets, fruits,...\"\n          selectTextOnFocus\n        />\n      </View>\n      <View style={styles.tags}>\n        {tags.map((tag) => (\n          <Button\n            theme={theme}\n            key={tag}\n            text={tag}\n            onPress={(): void => {\n              setQuery(tag)\n              getPictures(tag)\n            }}\n          />\n        ))}\n      </View>\n\n      {message && <Text style={styles.message}>{message}</Text>}\n\n      {isLoading && (\n        <View style={styles.loader}>\n          <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n        </View>\n      )}\n\n      {!isLoading && filteredPictures.length !== 0 && (\n      <ScrollView style={styles.pictureHolder}>\n        {filteredPictures.map((picture, index) => (\n          <TouchableWithoutFeedback\n            key={picture.image}\n            onLongPress={(): void => handleToggleInfo(index)}\n            onPress={(): void => handleDoubleTap(index)}\n          >\n            <View style={styles.pictureHolder} >\n              <Image\n                style={styles.picture}\n                source={{uri: picture.image}}\n                width={width > 640 ? 640 : width}\n              />\n\n              {picture.showInfo && (\n                <View style={styles.pictureInfo}>\n                  <TouchableHighlight\n                    underlayColor=\"#cccccc\"\n                    style={{...styles.button, marginLeft: 2, marginRight: 2}}\n                    onPress={(): void => deletePicture(index, query) }\n                  >\n                    <Text>x</Text>\n                  </TouchableHighlight>\n\n                  {renderPictureTags(picture.tags)}\n                </View>\n              )}\n            </View>\n          </TouchableWithoutFeedback>\n        ))}\n\n        <Button\n          onPress={(): void => setLimit(limit + 10) }\n          text=\"load more\"\n          addStyles={{marginBottom: '13%', alignSelf: 'center'}}\n        />\n      </ScrollView>\n      )}\n\n      <View style={styles.footer}>\n        {settingsCounter < 4 && (\n          <>\n            <Button\n              onPress={(): void => { showSettings() }}\n              text=\"media viewer\"\n              addStyles={styles.footerLink}\n            />\n            <Button\n              onPress={(): void => { updateSettings('theme', theme === 'dark' ? 'light' : 'dark') }}\n              text={theme === 'dark' ? 'light mode' : 'dark mode'}\n              addStyles={{...styles.footerLink, borderLeftWidth: 1}}\n            />\n          </>\n        )}\n        {settingsCounter > 20 && <Button\n          onPress={(): void => showSettings()}\n          text=\"language: english\"\n          addStyles={styles.footerLink}\n        />}\n\n        {settingsCounter === 4 && <Button\n          onPress={(): void => showSettings()}\n          text=\"settings\"\n          addStyles={styles.footerLink}\n          />}\n\n        {settingsCounter > 4 && <Button\n          onPress={(): void => setSettingsCounter(0)}\n          text=\"back\"\n          addStyles={styles.footerLink}\n        />}\n\n        {settingsCounter > 4 && <Button\n          onPress={(): void => {\n            setData('tags', JSON.stringify([]))\n            setTags([])\n            setQuery('')\n          }}\n          text=\"clear tags\"\n          addStyles={{...styles.footerLink, borderLeftWidth: 1}}\n        />}\n\n        {settingsCounter > 4 && <Button\n          onPress={(): void => {\n            setPictures([])\n            setData('pictures', JSON.stringify({}))\n          }}\n          text=\"clear cache\"\n          addStyles={{...styles.footerLink, borderLeftWidth: 1}}\n        />}\n      </View>\n    </View>\n  )\n}\n\nexport default App\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react'\nimport App from './src/App'\nimport * as Font from 'expo-font'\nimport { Platform } from 'react-native'\n\nif (Platform.OS === 'web') {\n  window.oncontextmenu = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    return false\n  }\n}\n\nconst AppContainer = () => {\n  const [isLoading, setIsLoading] = useState(true)\n\n  const loadAssetsAsync = async () => {\n    await Font.loadAsync({\n      'Ubuntu Mono': require('./assets/fonts/UbuntuMono-R.ttf'),\n    });\n\n    setIsLoading(false)\n  }\n\n  useEffect( () => {\n    loadAssetsAsync()\n  }, [])\n\n  return(\n    !isLoading && <App />\n  )\n}\n\nexport default AppContainer","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}